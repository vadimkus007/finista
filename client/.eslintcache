[{"/home/vadimkus/projects/nodejs/finista/client/src/index.js":"1","/home/vadimkus/projects/nodejs/finista/client/src/reportWebVitals.js":"2","/home/vadimkus/projects/nodejs/finista/client/src/useToken.js":"3","/home/vadimkus/projects/nodejs/finista/client/src/components/Logout.js":"4","/home/vadimkus/projects/nodejs/finista/client/src/App.js":"5","/home/vadimkus/projects/nodejs/finista/client/src/components/Sidebar/index.js":"6","/home/vadimkus/projects/nodejs/finista/client/src/components/Sidebar/Sidebar.js":"7","/home/vadimkus/projects/nodejs/finista/client/src/components/Sidebar/components/SidebarDivider/index.js":"8","/home/vadimkus/projects/nodejs/finista/client/src/components/Sidebar/components/SidebarHeading/index.js":"9","/home/vadimkus/projects/nodejs/finista/client/src/components/Sidebar/components/SidebarNavItem/index.js":"10","/home/vadimkus/projects/nodejs/finista/client/src/components/Sidebar/components/SidebarToggle/index.js":"11","/home/vadimkus/projects/nodejs/finista/client/src/components/Sidebar/components/SidebarBrand/index.js":"12","/home/vadimkus/projects/nodejs/finista/client/src/components/Sidebar/components/SidebarDivider/SidebarDivider.js":"13","/home/vadimkus/projects/nodejs/finista/client/src/components/Sidebar/components/SidebarNavItem/SidebarNavItem.js":"14","/home/vadimkus/projects/nodejs/finista/client/src/components/Sidebar/components/SidebarToggle/SidebarToggle.js":"15","/home/vadimkus/projects/nodejs/finista/client/src/components/Sidebar/components/SidebarBrand/SidebarBrand.js":"16","/home/vadimkus/projects/nodejs/finista/client/src/components/Sidebar/components/SidebarHeading/SidebarHeading.js":"17","/home/vadimkus/projects/nodejs/finista/client/src/styles/custom.js":"18","/home/vadimkus/projects/nodejs/finista/client/src/components/TopNavigator/index.js":"19","/home/vadimkus/projects/nodejs/finista/client/src/components/TopNavigator/TopNavigator.js":"20","/home/vadimkus/projects/nodejs/finista/client/src/layouts/DefaultLayout/index.js":"21","/home/vadimkus/projects/nodejs/finista/client/src/layouts/AuthLayout/index.js":"22","/home/vadimkus/projects/nodejs/finista/client/src/layouts/DefaultLayout/DefaultLayout.js":"23","/home/vadimkus/projects/nodejs/finista/client/src/layouts/AuthLayout/AuthLayout.js":"24","/home/vadimkus/projects/nodejs/finista/client/src/routes/PrivateRoute/index.js":"25","/home/vadimkus/projects/nodejs/finista/client/src/routes/PrivateRoute/PrivateRoute.js":"26","/home/vadimkus/projects/nodejs/finista/client/src/services/index.js":"27","/home/vadimkus/projects/nodejs/finista/client/src/services/authentication.service.js":"28","/home/vadimkus/projects/nodejs/finista/client/src/services/user.service.js":"29","/home/vadimkus/projects/nodejs/finista/client/src/helpers/index.js":"30","/home/vadimkus/projects/nodejs/finista/client/src/helpers/auth-header.js":"31","/home/vadimkus/projects/nodejs/finista/client/src/helpers/handle-response.js":"32","/home/vadimkus/projects/nodejs/finista/client/src/helpers/history.js":"33","/home/vadimkus/projects/nodejs/finista/client/src/components/FormErrors/index.js":"34","/home/vadimkus/projects/nodejs/finista/client/src/components/FormErrors/FormErrors.js":"35","/home/vadimkus/projects/nodejs/finista/client/src/pages/UserProfile/index.js":"36","/home/vadimkus/projects/nodejs/finista/client/src/pages/UserProfile/UserProfile.js":"37","/home/vadimkus/projects/nodejs/finista/client/src/pages/Quotes/index.js":"38","/home/vadimkus/projects/nodejs/finista/client/src/pages/Quotes/Quotes.js":"39","/home/vadimkus/projects/nodejs/finista/client/src/helpers/get-request.js":"40","/home/vadimkus/projects/nodejs/finista/client/src/components/DataTables/index.js":"41","/home/vadimkus/projects/nodejs/finista/client/src/components/DataTables/DataTables.js":"42","/home/vadimkus/projects/nodejs/finista/client/src/components/ReactTable/index.js":"43","/home/vadimkus/projects/nodejs/finista/client/src/components/ReactTable/ReactTable.js":"44","/home/vadimkus/projects/nodejs/finista/client/src/pages/Dashboard/Dashboard.js":"45","/home/vadimkus/projects/nodejs/finista/client/src/pages/Home/index.js":"46","/home/vadimkus/projects/nodejs/finista/client/src/pages/Home/Home.js":"47","/home/vadimkus/projects/nodejs/finista/client/src/pages/Signin/index.js":"48","/home/vadimkus/projects/nodejs/finista/client/src/pages/Signin/Signin.js":"49","/home/vadimkus/projects/nodejs/finista/client/src/pages/Signup/index.js":"50","/home/vadimkus/projects/nodejs/finista/client/src/pages/Signup/Signup.js":"51","/home/vadimkus/projects/nodejs/finista/client/src/pages/NotFound/index.js":"52","/home/vadimkus/projects/nodejs/finista/client/src/pages/NotFound/NotFound.js":"53","/home/vadimkus/projects/nodejs/finista/client/src/pages/Quote/index.js":"54","/home/vadimkus/projects/nodejs/finista/client/src/pages/Quote/Quote.js":"55","/home/vadimkus/projects/nodejs/finista/client/src/components/StarCheckbox/index.js":"56","/home/vadimkus/projects/nodejs/finista/client/src/components/StarCheckbox/StarCheckbox.js":"57","/home/vadimkus/projects/nodejs/finista/client/src/components/Spinner/index.js":"58","/home/vadimkus/projects/nodejs/finista/client/src/components/Spinner/Spinner.js":"59","/home/vadimkus/projects/nodejs/finista/client/src/pages/Preferences/Preferences.js":"60","/home/vadimkus/projects/nodejs/finista/client/src/pages/Portfolios/index.js":"61","/home/vadimkus/projects/nodejs/finista/client/src/pages/Portfolios/Portfolios.js":"62","/home/vadimkus/projects/nodejs/finista/client/src/components/Toolbar/index.js":"63","/home/vadimkus/projects/nodejs/finista/client/src/components/Toolbar/Toolbar.js":"64","/home/vadimkus/projects/nodejs/finista/client/src/pages/PortfolioEdit/index.js":"65","/home/vadimkus/projects/nodejs/finista/client/src/pages/PortfolioEdit/PortfolioEdit.js":"66","/home/vadimkus/projects/nodejs/finista/client/src/pages/Trades/index.js":"67","/home/vadimkus/projects/nodejs/finista/client/src/pages/Trades/Trades.js":"68","/home/vadimkus/projects/nodejs/finista/client/src/helpers/portfolio.js":"69","/home/vadimkus/projects/nodejs/finista/client/src/components/TableCellMenu/index.js":"70","/home/vadimkus/projects/nodejs/finista/client/src/components/TableCellMenu/TableCellMenu.js":"71","/home/vadimkus/projects/nodejs/finista/client/src/pages/TradeEdit/index.js":"72","/home/vadimkus/projects/nodejs/finista/client/src/pages/TradeEdit/TradeEdit.js":"73","/home/vadimkus/projects/nodejs/finista/client/src/components/SelectSecids/index.js":"74","/home/vadimkus/projects/nodejs/finista/client/src/components/SelectSecids/SelectSecids.js":"75","/home/vadimkus/projects/nodejs/finista/client/src/components/FixRequiredSelect/index.js":"76","/home/vadimkus/projects/nodejs/finista/client/src/components/FixRequiredSelect/FixRequiredSelect.js":"77","/home/vadimkus/projects/nodejs/finista/client/src/pages/Actives/index.js":"78","/home/vadimkus/projects/nodejs/finista/client/src/pages/Actives/Actives.js":"79","/home/vadimkus/projects/nodejs/finista/client/src/components/ReactTableSort/index.js":"80","/home/vadimkus/projects/nodejs/finista/client/src/components/ReactTableSort/ReactTableSort.js":"81","/home/vadimkus/projects/nodejs/finista/client/src/pages/Rebalance/index.js":"82","/home/vadimkus/projects/nodejs/finista/client/src/pages/Rebalance/Rebalance.js":"83","/home/vadimkus/projects/nodejs/finista/client/src/pages/Goals/index.js":"84","/home/vadimkus/projects/nodejs/finista/client/src/pages/Goals/Goals.js":"85"},{"size":675,"mtime":1612534672590,"results":"86","hashOfConfig":"87"},{"size":362,"mtime":1612276961149,"results":"88","hashOfConfig":"87"},{"size":810,"mtime":1612598023599,"results":"89","hashOfConfig":"87"},{"size":345,"mtime":1612619987834,"results":"90","hashOfConfig":"87"},{"size":3637,"mtime":1614013670570,"results":"91","hashOfConfig":"87"},{"size":35,"mtime":1612538609522,"results":"92","hashOfConfig":"87"},{"size":3206,"mtime":1613395037685,"results":"93","hashOfConfig":"87"},{"size":42,"mtime":1612536456444,"results":"94","hashOfConfig":"87"},{"size":42,"mtime":1612536469372,"results":"95","hashOfConfig":"87"},{"size":42,"mtime":1612536479916,"results":"96","hashOfConfig":"87"},{"size":41,"mtime":1612536487732,"results":"97","hashOfConfig":"87"},{"size":40,"mtime":1612536428987,"results":"98","hashOfConfig":"87"},{"size":173,"mtime":1612454546696,"results":"99","hashOfConfig":"87"},{"size":547,"mtime":1612548605030,"results":"100","hashOfConfig":"87"},{"size":251,"mtime":1612532588024,"results":"101","hashOfConfig":"87"},{"size":691,"mtime":1612548908133,"results":"102","hashOfConfig":"87"},{"size":180,"mtime":1612521954251,"results":"103","hashOfConfig":"87"},{"size":1788,"mtime":1612534436838,"results":"104","hashOfConfig":"87"},{"size":39,"mtime":1612539036953,"results":"105","hashOfConfig":"87"},{"size":2188,"mtime":1613222109043,"results":"106","hashOfConfig":"87"},{"size":43,"mtime":1612579420525,"results":"107","hashOfConfig":"87"},{"size":40,"mtime":1612580727766,"results":"108","hashOfConfig":"87"},{"size":613,"mtime":1613287921114,"results":"109","hashOfConfig":"87"},{"size":165,"mtime":1612584694528,"results":"110","hashOfConfig":"87"},{"size":42,"mtime":1612593994371,"results":"111","hashOfConfig":"87"},{"size":668,"mtime":1612689319450,"results":"112","hashOfConfig":"87"},{"size":73,"mtime":1612600762916,"results":"113","hashOfConfig":"87"},{"size":1304,"mtime":1612689362907,"results":"114","hashOfConfig":"87"},{"size":313,"mtime":1612602602942,"results":"115","hashOfConfig":"87"},{"size":152,"mtime":1613576362706,"results":"116","hashOfConfig":"87"},{"size":347,"mtime":1612602469803,"results":"117","hashOfConfig":"87"},{"size":746,"mtime":1612603522233,"results":"118","hashOfConfig":"87"},{"size":95,"mtime":1612600650378,"results":"119","hashOfConfig":"87"},{"size":37,"mtime":1612679967262,"results":"120","hashOfConfig":"87"},{"size":444,"mtime":1612679971522,"results":"121","hashOfConfig":"87"},{"size":42,"mtime":1612788188531,"results":"122","hashOfConfig":"87"},{"size":5916,"mtime":1613288462646,"results":"123","hashOfConfig":"87"},{"size":33,"mtime":1612877600938,"results":"124","hashOfConfig":"87"},{"size":2881,"mtime":1613287905586,"results":"125","hashOfConfig":"87"},{"size":727,"mtime":1613487995956,"results":"126","hashOfConfig":"87"},{"size":29,"mtime":1612886062821,"results":"127","hashOfConfig":"87"},{"size":3891,"mtime":1613654690040,"results":"128","hashOfConfig":"87"},{"size":37,"mtime":1613051525556,"results":"129","hashOfConfig":"87"},{"size":7575,"mtime":1613968177606,"results":"130","hashOfConfig":"87"},{"size":177,"mtime":1613288066950,"results":"131","hashOfConfig":"87"},{"size":34,"mtime":1612581353905,"results":"132","hashOfConfig":"87"},{"size":184,"mtime":1613288043949,"results":"133","hashOfConfig":"87"},{"size":37,"mtime":1612536502269,"results":"134","hashOfConfig":"87"},{"size":4754,"mtime":1613285273594,"results":"135","hashOfConfig":"87"},{"size":36,"mtime":1612584900164,"results":"136","hashOfConfig":"87"},{"size":6367,"mtime":1613285582861,"results":"137","hashOfConfig":"87"},{"size":63,"mtime":1612444546526,"results":"138","hashOfConfig":"87"},{"size":536,"mtime":1613288093998,"results":"139","hashOfConfig":"87"},{"size":32,"mtime":1613206629419,"results":"140","hashOfConfig":"87"},{"size":13409,"mtime":1613291544781,"results":"141","hashOfConfig":"87"},{"size":40,"mtime":1613266621107,"results":"142","hashOfConfig":"87"},{"size":2224,"mtime":1613274455202,"results":"143","hashOfConfig":"87"},{"size":37,"mtime":1613285999292,"results":"144","hashOfConfig":"87"},{"size":322,"mtime":1613286275105,"results":"145","hashOfConfig":"87"},{"size":177,"mtime":1613288578049,"results":"146","hashOfConfig":"87"},{"size":37,"mtime":1613395178924,"results":"147","hashOfConfig":"87"},{"size":5972,"mtime":1613653166733,"results":"148","hashOfConfig":"87"},{"size":34,"mtime":1613396150176,"results":"149","hashOfConfig":"87"},{"size":275,"mtime":1613401208898,"results":"150","hashOfConfig":"87"},{"size":40,"mtime":1613479965050,"results":"151","hashOfConfig":"87"},{"size":5370,"mtime":1613490205086,"results":"152","hashOfConfig":"87"},{"size":33,"mtime":1613573405990,"results":"153","hashOfConfig":"87"},{"size":4640,"mtime":1613832072290,"results":"154","hashOfConfig":"87"},{"size":271,"mtime":1613574830871,"results":"155","hashOfConfig":"87"},{"size":40,"mtime":1613651935498,"results":"156","hashOfConfig":"87"},{"size":1786,"mtime":1613653184773,"results":"157","hashOfConfig":"87"},{"size":38,"mtime":1613654883755,"results":"158","hashOfConfig":"87"},{"size":16027,"mtime":1613830334239,"results":"159","hashOfConfig":"87"},{"size":41,"mtime":1613659475267,"results":"160","hashOfConfig":"87"},{"size":433,"mtime":1613663793563,"results":"161","hashOfConfig":"87"},{"size":45,"mtime":1613825405155,"results":"162","hashOfConfig":"87"},{"size":1609,"mtime":1613826582786,"results":"163","hashOfConfig":"87"},{"size":36,"mtime":1613832663271,"results":"164","hashOfConfig":"87"},{"size":18396,"mtime":1614260890614,"results":"165","hashOfConfig":"87"},{"size":46,"mtime":1613968432331,"results":"166","hashOfConfig":"87"},{"size":2584,"mtime":1613973643963,"results":"167","hashOfConfig":"87"},{"size":38,"mtime":1614012495689,"results":"168","hashOfConfig":"87"},{"size":25633,"mtime":1614407483624,"results":"169","hashOfConfig":"87"},{"size":34,"mtime":1614013363247,"results":"170","hashOfConfig":"87"},{"size":10196,"mtime":1614063651984,"results":"171","hashOfConfig":"87"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},"1m4287r",{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"209","messages":"210","errorCount":24,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"174"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"174"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"174"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"174"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"174"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"174"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"174"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"174"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":5,"source":"330","usedDeprecatedRules":"174"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"174"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"174"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"174"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"174"},"/home/vadimkus/projects/nodejs/finista/client/src/index.js",[],["359","360"],"/home/vadimkus/projects/nodejs/finista/client/src/reportWebVitals.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/useToken.js",[],["361","362"],"/home/vadimkus/projects/nodejs/finista/client/src/components/Logout.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/App.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/components/Sidebar/index.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/components/Sidebar/Sidebar.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/components/Sidebar/components/SidebarDivider/index.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/components/Sidebar/components/SidebarHeading/index.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/components/Sidebar/components/SidebarNavItem/index.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/components/Sidebar/components/SidebarToggle/index.js",[],["363","364"],"/home/vadimkus/projects/nodejs/finista/client/src/components/Sidebar/components/SidebarBrand/index.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/components/Sidebar/components/SidebarDivider/SidebarDivider.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/components/Sidebar/components/SidebarNavItem/SidebarNavItem.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/components/Sidebar/components/SidebarToggle/SidebarToggle.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/components/Sidebar/components/SidebarBrand/SidebarBrand.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/components/Sidebar/components/SidebarHeading/SidebarHeading.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/styles/custom.js",["365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389"],"/home/vadimkus/projects/nodejs/finista/client/src/components/TopNavigator/index.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/components/TopNavigator/TopNavigator.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/layouts/DefaultLayout/index.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/layouts/AuthLayout/index.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/layouts/DefaultLayout/DefaultLayout.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/layouts/AuthLayout/AuthLayout.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/routes/PrivateRoute/index.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/routes/PrivateRoute/PrivateRoute.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/services/index.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/services/authentication.service.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/services/user.service.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/helpers/index.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/helpers/auth-header.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/helpers/handle-response.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/helpers/history.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/components/FormErrors/index.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/components/FormErrors/FormErrors.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/pages/UserProfile/index.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/pages/UserProfile/UserProfile.js",["390","391","392"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { authHeader } from '../../helpers';\nimport { authenticationService } from '../../services';\nimport FormErrors from '../../components/FormErrors';\n\nimport { NotificationManager } from 'react-notifications'\n\nexport default function UserProfile(props) {\n\n    const [email, setEmail] = useState('');\n    const [first_name, setFirstName] = useState('');\n    const [last_name, setLastName] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [formErrors, setFormErrors] = useState({error: ''});\n\n    const API_URL = 'http://localhost:3001/api/user';\n\n    const authenticateHeader = authHeader();\n\n    const history = useHistory();\n\n    const handleUserInput = (e) => {\n        const name = e.target.name;\n        const value = e.target.value;\n        if (name === 'first_name') {setFirstName(value)};\n        if (name === 'last_name') {setLastName(value)};\n        if (name === 'email') {setEmail(value)};\n        if (name === 'password') {setPassword(value)};\n    }\n\n    function getUser() {\n\n        fetch(API_URL, {\n            method: 'GET',\n            headers: authenticateHeader\n        })\n        .then(response => response.json())\n        .then(user => {\n\n            if (user) {\n                setEmail(user.email);\n                setFirstName(user.first_name);\n                setLastName(user.last_name);\n                setPassword(user.password.slice(0,6));\n            }\n        })\n        .catch(error => {\n            // setFormErrors({error: error});\n            NotificationManager.error(error, 'Error', 2000);\n        })\n    }\n\n    function updateUser(user) {\n        var headers = authenticateHeader;\n        headers['Content-Type'] = 'application/json';\n        headers['Accept'] = 'application/json';\n\n        return fetch(API_URL, {\n            method: 'POST',\n            headers: headers,\n            body: JSON.stringify(user)\n        })\n        .then(result => result.json());\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        updateUser({email: email, password: password, first_name: first_name, last_name: last_name})\n        .then(response => {\n\n            if (response.message) {\n                //setFormErrors({message: response.message});\n                NotificationManager.success(response.message, 'Success', 2000);\n            }\n\n            if (response.user) {\n                return authenticationService.signin(email, password);\n            }\n        })\n        .then(response => {\n            \n            if (response.message) {\n                // setFormErrors({message: response.message});\n                NotificationManager.success(response.message, 'Success', 2000);\n            }\n\n            if (response.user) {\n               // history.push('/');\n            } else {\n                // setFormErrors({error: response.message});\n                NotificationManager.error(response.error, 'Error', 2000);\n            }\n        })\n        .catch(err => {\n            // setFormErrors({error: err});\n            NotificationManager.error(err, 'Error', 2000);\n        });\n\n    }\n\n    useEffect(() => {\n        getUser();\n    }, []);\n    \n\n    return (\n\n        <div className=\"container-fluid\">\n\n            <div className=\"card shadow mb-4\">\n                <div className=\"card-header py-3\">\n                    <h6 className=\"m-0 text-primary font-weight-bold\">Профиль пользователя</h6>\n                </div>\n                <div className=\"card-body\">\n                    <form id=\"user\" method=\"POST\" onSubmit={handleSubmit}>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"email\" className=\"col-sm-2 col-form-label\">Email</label>\n                            <div className=\"col-sm-10\">\n                                <input type=\"email\" className=\"form-control\" name=\"email\" value={email} placeholder=\"E-mail...\" onChange={handleUserInput}/>\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"first_name\" className=\"col-sm-2 col-form-label\">First Name</label>\n                            <div class=\"col-sm-10\">\n                                <input type=\"text\" className=\"form-control\" name=\"first_name\" value={first_name} placeholder=\"First Name\" onChange={handleUserInput}/>\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"last_name\" className=\"col-sm-2 col-form-label\">Last Name</label>\n                            <div className=\"col-sm-10\">\n                                <input type=\"text\" className=\"form-control\" name=\"last_name\" value={last_name} placeholder=\"Last Name\" onChange={handleUserInput}/>\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"password\" className=\"col-sm-2 col-form-label\">Password</label>\n                            <div className=\"col-sm-10\">\n                                <input type=\"password\" className=\"form-control\" name=\"password\" value={password} placeholder=\"password\" onChange={handleUserInput}/>\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <button type=\"submit\" className=\"btn btn-primary btn-sm mr-sm-2\" >Сохранить</button>\n                        </div>\n                    </form>\n                    <div className=\"panel panel-default alert-danger\">\n                        <FormErrors formErrors={formErrors} />\n                    </div>\n                </div>\n            </div>\n\n        </div>\n\n    );\n\n}","/home/vadimkus/projects/nodejs/finista/client/src/pages/Quotes/index.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/pages/Quotes/Quotes.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/helpers/get-request.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/components/DataTables/index.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/components/DataTables/DataTables.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/components/ReactTable/index.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/components/ReactTable/ReactTable.js",["393"],"import React, { useState, useEffect } from 'react';\n\nimport { useTable, useFilters, useGlobalFilter, useAsyncDebounce, usePagination, useSortBy } from 'react-table';\n\nimport Pagination from 'react-js-pagination';\n\nimport { faSort } from \"@fortawesome/free-solid-svg-icons\";\nimport { faSortUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { faSortDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport './ReactTable.css';\n\n\n// Define a default UI for filtering\n    function GlobalFilter({\n        preGlobalFilteredRows,\n        globalFilter,\n        setGlobalFilter,\n    }) {\n        const count = preGlobalFilteredRows.length\n        const [value, setValue] = React.useState(globalFilter)\n        const onChange = useAsyncDebounce(value => {\n            setGlobalFilter(value || undefined)\n        }, 200)\n\n        return (\n            <div className=\"dataTables_filter\">\n            <label>\n                Search:{' '}\n                <input\n                    className=\"form-control form-control-sm\"\n                    value={value || \"\"}\n                    onChange={e => {\n                        setValue(e.target.value);\n                        onChange(e.target.value);\n                    }}\n                    placeholder={`${count} records...`}\n                />\n            </label>\n            </div>\n        )\n    }\n\n    function DefaultColumnFilter({\n        column: { filterValue, preFilteredRows, setFilter },\n    }) {\n        const count = preFilteredRows.length\n\n        return (\n            <input\n                className=\"form-control\"\n                value={filterValue || ''}\n                onChange={e => {\n                    setFilter(e.target.value || undefined)\n                }}\n                placeholder={`Search ${count} records...`}\n            />\n        )\n    }\n\n\nfunction ReactTable(props) {\n\n    const [columns, setColumns] = useState([]);\n\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        setColumns(props.columns);\n        if (props.data) {\n            setData(props.data);\n        }\n    });\n    \n    const defaultColumn = React.useMemo(\n        () => ({\n            // Default Filter UI\n            Filter: DefaultColumnFilter,\n        }),\n        []\n    )\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        state,\n        preGlobalFilteredRows,\n        setGlobalFilter,\n        page,\n//        canPreviousPage,\n//        canNextPage,\n        pageOptions,\n//        pageCount,\n        gotoPage,\n//        nextPage,\n//        previousPage,\n        setPageSize,\n        state: { pageIndex, pageSize }\n    } = useTable({\n            columns,\n            data,\n            defaultColumn,\n            initialState: { pageIndex: 0, pageSize: 10 }\n        },\n\n        useFilters,\n        useGlobalFilter,\n        useSortBy,\n        usePagination\n    );\n\n    // pagination\n/*    let paginationConfig = {\n      totalPages: 22,\n      currentPage: 15,\n      showMax: 5,\n      size: \"md\",\n      threeDots: true,\n      prevNext: true,\n      href: 'https://example.com/items?page=*', // * will be replaced by the page number\n      pageOneHref: 'https://example.com/items',\n      shadow: true\n    };\n*/\n    function handlePageChange(pageNumber) {\n        gotoPage(pageNumber-1);\n    }\n\n    return (\n\n        <div>\n            <div className=\"row mt-4\">\n                <div className=\"col-sm-12 col-md-6\">\n                    <div className=\"dataTables_length\">\n                        <label>\n                            Show \n                            <select \n                                className=\"custom-select custom-select-sm form-control form-control-sm\"\n                                value={pageSize}\n                                onChange={e => {\n                                    setPageSize(Number(e.target.value))\n                                }}\n                            >\n                                {[5, 10, 20, 30, 40, 50].map(pageSize => (\n                                    <option key={pageSize} value={pageSize}>\n                                        {pageSize}\n                                    </option>\n                                ))}\n                            </select>\n                            entries\n                        </label>\n                    </div>\n                </div>\n                <div className=\"col-sm-12 col-md-6\">\n                    <GlobalFilter\n                        preGlobalFilteredRows={preGlobalFilteredRows}\n                        globalFilter={state.globalFilter}\n                        setGlobalFilter={setGlobalFilter}\n                    />\n                </div>\n                                    \n            </div>\n\n        <table className=\"table\" {...getTableProps()}>\n            <thead>\n                {headerGroups.map((headerGroup) => (\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                        {headerGroup.headers.map(column => (\n                            <th {...column.getHeaderProps(column.getSortByToggleProps())}\n                            className={\n                                column.isSorted\n                                    ? column.isSortedDesc\n                                        ? \"\"\n                                        : \"\"\n                                    : \"\"\n                            }\n                            >\n                                {column.render('Header')}\n                                <span className=\"ml-2\">\n                                        {column.isSorted\n                                            ? column.isSortedDesc\n                                                ? <FontAwesomeIcon icon={faSortDown} />\n                                                : <FontAwesomeIcon icon={faSortUp} />\n                                            : <FontAwesomeIcon icon={faSort} className=\"text-gray-300\" />}\n                                </span>\n                            </th>\n                        ))}\n                    </tr>\n                ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {page.map((row, i) => {\n                    prepareRow(row);\n                    return (\n                        <tr {...row.getRowProps()}>\n                            {row.cells.map(cell => {\n                                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                            })}\n                        </tr>\n                    )\n                })}\n            </tbody>\n        </table>\n    \n        <div className=\"row\">\n            <div className=\"col-sm-12 col-md-5\">\n                <div className=\"dataTables_info\">\n                    Страница {pageIndex+1} из {pageOptions.length}\n                </div>\n            </div>\n            <div className=\"col-sm-12 col-md-7\">\n                <div className=\"dataTables_paginate\">\n                    <Pagination\n                        itemClass=\"page-item\"\n                        linkClass=\"page-link\"\n                        activePage={pageIndex+1}\n                        itemsCountPerPage={pageSize}\n                        totalItemsCount={rows.length}\n                        pageRangeDisplayed={5}\n                        onChange={handlePageChange}\n                    />\n                </div>\n            </div>\n            \n        </div>\n\n        </div>\n\n    );\n\n};\n\nexport default ReactTable;\n","/home/vadimkus/projects/nodejs/finista/client/src/pages/Dashboard/Dashboard.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/pages/Home/index.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/pages/Home/Home.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/pages/Signin/index.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/pages/Signin/Signin.js",["394"],"import React, { useState } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\n// import useToken from '../../useToken';\nimport { authenticationService } from '../../services';\n// import { history } from '../../helpers';\nimport './signin.css';\n\nimport { NotificationManager } from 'react-notifications';\n\nexport default function Signin() {\n\n    const [error, setError] = useState(null);\n//    const [status, setStatus] = useState();\n//    const [submitting, setSubmitting] = useState(true);\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [message, setMessage] = useState('');\n\n    const loc = useLocation();\n    const history = useHistory();\n\n    const fromURL = (loc.state) ? loc.state.from.pathname : '/';\n\n    if (authenticationService.currentUserValue) { \n        history.push('/');\n    }\n\n\n\n        const handleSubmit = async e => {\n            e.preventDefault();\n\n            authenticationService.signin(email, password)\n            .then(response => {\n                if (response.user) {\n                    history.push(fromURL);\n                } else {\n                    // setMessage(response.message);\n                    NotificationManager.error(response.message, 'Error!', 2000);\n                    history.push('/signin');\n                }\n            })\n            .catch(error => {\n                setError(error);\n                history.push('/signin');\n            });\n        };\n\n\n        return (\n\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">\n                <div className=\"col-xl-10 col-lg-12 col-md-9\">\n                    <div className=\"card o-hidden border-0 shadow-lg my-5\">\n                        <div className=\"card-body p-0 alert-body\">\n                            <div className=\"row\">\n                                <div className=\"col-lg-6 d-none d-lg-block bg-login-image\"></div>\n                                <div className=\"col-lg-6\">\n                                    <div className=\"p-5\">\n                                        <div className=\"text-center\">\n                                            <h1 className=\"h4 text-gray-900 mb-4\">Welcome Back!</h1>\n                                        </div>\n                                        <form className=\"user\" method=\"POST\" onSubmit={handleSubmit}>\n                                            <div className=\"form-group\">\n                                                <input type=\"email\" name=\"email\" className=\"form-control form-control-user\"\n                                                    id=\"exampleInputEmail\" aria-describedby=\"emailHelp\"\n                                                    placeholder=\"Enter Email Address...\" onChange={e => setEmail(e.target.value)}/>\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <input type=\"password\" name=\"password\" className=\"form-control form-control-user\"\n                                                    id=\"exampleInputPassword\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)}/>\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <div className=\"custom-control custom-checkbox small\">\n                                                    <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck\" />\n                                                    <label className=\"custom-control-label\" htmlFor=\"customCheck\">Remember\n                                                        Me</label>\n                                                </div>\n                                            </div>\n                                            <button className=\"btn btn-md btn-primary btn-block\" type=\"submit\">Sign in</button>\n                                        </form>\n                                        <hr />\n                                        <div className=\"text-center\">\n                                            <a className=\"small\" href=\"/signup\">Create an Account!</a>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                                {(message.length>0) &&\n                                <div className={'alert alert-danger'}>{message} {error}</div>\n                                }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        );\n}\n\n\n\n","/home/vadimkus/projects/nodejs/finista/client/src/pages/Signup/index.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/pages/Signup/Signup.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/pages/NotFound/index.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/pages/NotFound/NotFound.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/pages/Quote/index.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/pages/Quote/Quote.js",["395","396","397","398","399","400","401","402"],"import React, { useState, useEffect } from 'react';\nimport { getRequest, postRequest } from '../../helpers';\nimport { authenticationService } from '../../services';\n\nimport { Card } from 'react-bootstrap';\n\nimport HighchartsReact from 'highcharts-react-official';\nimport Highcharts from 'highcharts/highstock';\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStar as fasStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { faStar as farStar } from \"@fortawesome/free-regular-svg-icons\";\nimport { faRubleSign } from '@fortawesome/free-solid-svg-icons';\n\nimport './Quote.css';\n\nexport default function Quote(props) {\n\n    const [secid, setSecid] = useState(props.match.params.secid);\n\n    const [data, setData] = useState({});\n\n    const [user, setUser] = useState({});\n\n    const [favorite, setFavorite] = useState();\n\n    var linkUrl = 'https://www.moex.com';\n\n    if (data.securities) {\n        switch (data.securities.market) {\n            case 'shares' : \n                linkUrl = 'https://www.moex.com/ru/issue.aspx?code=' + secid;\n                break;\n            case 'foreignshares' :\n                linkUrl = 'https://www.moex.com/ru/issue.aspx?code=' + secid;\n                break;\n            case 'index' :\n                linkUrl = 'https://www.moex.com/ru/index/' + secid;\n                break;\n            case 'bonds' :\n                linkUrl = 'https://www.moex.com/ru/issue.aspx?board='+data.securities.BOARDID+'&code='+secid;\n                break;\n            default:\n                linkUrl = 'https://www.moex.com/ru/issue.aspx?board='+data.securities.BOARDID+'&code='+secid;\n                break;\n\n        }\n    }\n\n    const getSecurity = () => {\n        const endPoint = '/quotes/'+secid;\n        getRequest(endPoint)\n        .then(data => {\n\n//alert(data.favorite);\n            setData(data);\n            setFavorite(data.favorite);\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    // for highcharts\n\n\n\n    const chartOptions = {\n        title: {\n            text: null\n        },\n        series: [{\n            name: data.securities ? data.securities.SECID : '',\n            data: data.history,\n            tooltip: {\n                valueDecimals: 2\n            }\n        }]\n    };\n\n    useEffect(() => {\n        getSecurity();\n        const currentUser = authenticationService.currentUserValue;\n        if (currentUser) {\n            setUser(currentUser.user);\n        }\n    }, []);\n\n    // coinditional render\n\n    function renderDividends(dividends) {\n        return (\n            <Card className=\"shadow mb-4\">\n                <Card.Header>\n                    <h6 className=\"m-0 text-primary font-weight-bold\">\n                        Дивиденды\n                    </h6>\n                </Card.Header>\n                <Card.Body>\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th>Дата</th>\n                                <th>Размер дивидендов</th>\n                                <th>Цена акции</th>\n                                <th>Дивидендная доходность</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {dividends.map((row) => (\n                                <tr>\n                                    <td>{row.registryclosedate}</td>\n                                    <td>{row.value}</td>\n                                    <td>{row.price}</td>\n                                    <td>{row.yield ? Number(row.yield).toFixed(2) : ''}</td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </Card.Body>\n            </Card>\n        );\n    }\n\n    function handleFavorite() {\n        const endPoint = '/quotes/'+secid;\n        postRequest(endPoint)\n        .then(result => {\n            setFavorite(result.favorite);\n        })\n        .catch(err => {\n            console.log(err);\n        })\n\n    }\n\n    const renderBonds = () => (\n        <>\n        <hr />\n        <div className=\"d-inline-flex flex-row justify-content-between col-12\">\n            <div>\n                Доходность последней сделки: \n            </div>\n\n            <div>\n                {Number(data.securities.YIELD).toFixed(2)}\n                <span> %</span>\n            </div>\n        </div>\n        \n        <hr />\n        <div className=\"d-inline-flex flex-row justify-content-between col-12\">\n            <div>\n                Дата погашения: \n            </div>\n            <div>\n                {data.securities.MATDATE}\n            </div>\n        </div>\n        \n        <div className=\"d-inline-flex flex-row justify-content-between col-12\">\n            <div>\n                Дюрация: \n            </div>\n            <div>\n                {data.securities.DURATION}\n            </div>\n        </div>\n        \n        <hr />  \n        <div className=\"d-inline-flex flex-row justify-content-between col-12\">\n            <div>\n                Номинальная стоимость лота: \n            </div>\n            <div>\n                {data.securities.LOTVALUE}\n                <span> <FontAwesomeIcon icon={faRubleSign} size=\"sm\" /></span>\n            </div>\n        </div>\n        \n        <hr />\n        <div className=\"d-inline-flex flex-row justify-content-between col-12\">\n            <div>\n                Дата досрочного выкупа: \n            </div>\n            <div>\n                {(data.securities.OFFERDATE) ? data.securities.OFFERDATE : 'Нет'}\n            </div>\n        </div>\n\n            <div className=\"d-inline-flex flex-row justify-content-between col-12\">\n                <div>\n                    Цена оферты: \n                </div>\n                <div>\n                    {Number(data.securities.BUYBACKPRICE).toFixed(2)}\n                    <span> <FontAwesomeIcon icon={faRubleSign} size=\"sm\" /></span>\n                </div>\n            </div>\n            \n            <div className=\"d-inline-flex flex-row justify-content-between col-12\">\n                <div>\n                    Цена оферты: \n                </div>\n                <div>\n                    {Number(data.securities.BUYBACKPRICE).toFixed(2)}\n                    <span> <FontAwesomeIcon icon={faRubleSign} size=\"sm\" /></span>\n                </div>\n            </div>\n         \n        <hr />\n        <div className=\"d-inline-flex flex-row justify-content-between col-12\">\n            <div>\n                Дата выплаты купона: \n            </div>\n            <div>\n                {data.securities.NEXTCOUPON}\n            </div>\n        </div>\n        \n        <div className=\"d-inline-flex flex-row justify-content-between col-12\">\n            <div>\n                Сумма купона: \n            </div>\n            <div>\n                {data.securities.COUPONVALUE}\n                <span> <FontAwesomeIcon icon={faRubleSign} size=\"sm\" /></span>\n            </div>\n        </div>\n        \n        <div className=\"d-inline-flex flex-row justify-content-between col-12\">\n            <div>\n                Ставка купона: \n            </div>\n            <div>\n                {data.securities.COUPONPERCENT ? data.securities.COUPONPERCENT : 0} %\n            </div>\n        </div>\n                    \n        <div className=\"d-inline-flex flex-row justify-content-between col-12\">\n            <div>\n                Длительность купона: \n            </div>\n            <div>\n                {data.securities.COUPONPERIOD}\n            </div>\n        </div>\n                    \n        <div className=\"d-inline-flex flex-row justify-content-between col-12\">\n            <div>\n                НКД на дату расчетов: \n            </div>\n            <div>\n                {data.securities.ACCRUEDINT}\n                <span> <FontAwesomeIcon icon={faRubleSign} size=\"sm\" /></span>\n            </div>\n        </div>\n        </>\n    );\n\n    return (\n                <div className=\"container-fluid\">\n                    <h1 className=\"h3 mb-4 text-gray-800\">Информация об инструменте</h1>\n\n                    <div className=\"row mb-4\">\n\n                    <div className=\"col-cm-12 col-md-6\">\n\n                    <Card className=\"shadow mb-4\">\n                        <Card.Header className=\"d-flex flex-row align-items-center justify-content-between\">\n                            <h6 className=\"m-0 text-primary font-weight-bold\">\n                                {data.securities \n                                    ? (data.securities.market == 'index')\n                                        ? data.securities.NAME \n                                        : data.securities.SECNAME \n                                    : ''} \n                                ({data.securities ? data.securities.SECID : ''})\n                            </h6>\n                            \n                            <div>\n                                {data.favorite !== null ? \n                                    <div>\n                                      \n                                        <input type=\"checkbox\" className=\"star-checkbox\" id=\"favorite\" checked={favorite} onChange={handleFavorite}/>\n                                        <label htmlFor=\"favorite\">\n                                            {favorite ? \n                                                <FontAwesomeIcon icon={fasStar} />\n                                                : \n                                                <FontAwesomeIcon icon={farStar} />\n                                            \n                                            }\n                                        </label>\n                                    </div>\n                                    : null\n                                }\n                            </div>\n                        </Card.Header>\n                        <Card.Body>\n                            <div className=\"d-flex\">\n                                <div className=\"display-4 mr-2\">\n                                {typeof data.securities   !== 'undefined'\n                                    ? data.securities.market == 'index' \n                                        ? data.securities.CURRENTVALUE \n                                        : data.securities.LAST \n                                    : ''}\n                                </div>\n                                <div className={\n                                    data.securities \n                                    ?  data.securities.LASTCHANGE > 0 \n                                        ? 'text-success' \n                                        : 'text-danger'\n                                    : ''\n                                }>\n                                    <span className=\"mr-2\">\n                                        {data.securities \n                                            ? data.securities.LASTCHANGE : ''}\n                                    </span>\n                                    <span className=\"percent\">\n                                        {data.securities \n                                            ? data.securities.market == 'index' \n                                                ? data.securities.LASTCHANGETOOPENPRC \n                                                : data.securities.LASTCHANGEPRCNT \n                                            : ''}\n                                    </span>\n                                </div>\n                            </div>\n                            {data.securities\n                                ? data.securities.market == 'bonds' \n                                    ? renderBonds() \n                                    : null\n                                : null\n                            }\n                            <hr />\n                            <a href={linkUrl} target=\"_blank\">Профиль эмитента &rarr;</a>\n                        </Card.Body>\n                    </Card>\n\n                    </div>\n                    <div className=\"col-sm-12 col-md-6\">\n\n                    <Card className=\"shadow mb-4\">\n                        <Card.Header>\n                            <h6 className=\"m-0 text-primary font-weight-bold\">\n                                {data.securities ? data.securities.SECID : ''} Stock Diagramm\n                            </h6>\n                        </Card.Header>\n                        <Card.Body>\n                            <div>\n                            <HighchartsReact\n                                highcharts={Highcharts}\n                                constructorType={'stockChart'}\n                                options={chartOptions}\n\n                            />\n                            </div>\n                        </Card.Body>\n                    </Card>\n                    </div>\n\n                    </div>\n\n                    {data.dividends && data.dividends.length > 0 \n                        ? renderDividends(data.dividends) : null}\n\n                </div>\n        \n    );\n}","/home/vadimkus/projects/nodejs/finista/client/src/components/StarCheckbox/index.js",[],["403","404"],"/home/vadimkus/projects/nodejs/finista/client/src/components/StarCheckbox/StarCheckbox.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/components/Spinner/index.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/components/Spinner/Spinner.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/pages/Preferences/Preferences.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/pages/Portfolios/index.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/pages/Portfolios/Portfolios.js",["405"],"import React, { useState, useEffect } from 'react';\nimport { Card, Button } from 'react-bootstrap';\n\nimport Toolbar from '../../components/Toolbar';\nimport TableCellMenu from '../../components/TableCellMenu';\n\nimport { getRequest } from '../../helpers';\n\nimport { authenticationService } from '../../services';\n\nimport { NotificationManager } from 'react-notifications';\n\nimport Spinner from '../../components/Spinner';\n\nexport default function Portfolios(props) {\n\n    const [portfolios, setPortfolios] = useState([]);\n\n    const [loading, setLoading] = useState(true);\n\n    const getPortfolios = () => {\n        const endPoint = '/portfolios';\n        getRequest(endPoint)\n        .then(results => {\n            setPortfolios(results.portfolios);\n            setLoading(false);\n        })\n        .catch(err => {\n            NotificationManager.error(err, 'Error', 2000);\n        });\n    }\n\n    const SPINNER = (\n        <div>\n            <Spinner />\n        </div>\n    );\n\n    useEffect(() => {\n        getPortfolios();\n        localStorage.removeItem('portfolio');\n    }, []);\n\n    const handlePortfolioSelect = (portfolio) => {\n        localStorage.setItem('portfolio', JSON.stringify(portfolio));\n        const fromPath = props.location.state ? props.location.state.from : null;\n        if (fromPath) {\n            props.history.push(fromPath);\n        } else {\n            props.history.push('/');\n        }\n    }\n\n    const handleNewPortfolio = (e) => {\n        e.preventDefault();\n        props.history.push({\n            pathname: '/portfolios/edit',\n            state: {}\n        });\n    }\n\n    const handleEditPortfolio = (portfolio) => {\n        props.history.push({\n            pathname: '/portfolios/edit',\n            state: portfolio\n        });\n    }\n\n    const handleDeletePortfolio = (portfolio) => {\n        const conf = window.confirm('Дествительно удалить портфель и все его содержимое?');\n        if (conf) {\n            // del portfolio\n        }\n    }\n\n    return (\n        <div className=\"container-fluid\">\n            <h1 className=\"h3 mb-4 text-gray-800\">Портфели</h1>\n\n            <div className=\"row\">\n                <div className=\"col-12\">\n\n                    <Card className=\"shadow mb-4\">\n                        <Card.Header className=\"d-flex flex-row align-items-center justify-content-between\">\n                            <h6 className=\"m-0 text-primary font-weight-bold\">\n                                Выбор портфеля\n                            </h6>\n                        </Card.Header>\n                        <Card.Body>\n                            \n                            <Toolbar>\n                                <Button\n                                    variant=\"primary\"\n                                    size=\"sm\"\n                                    onClick={handleNewPortfolio}\n                                >\n                                    Добавить портфель\n                                </Button>\n                            </Toolbar>\n\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <table className=\"table table-striped table-bordered table-hover\">\n                                        <thead>\n                                            <tr>\n                                                <th className=\"text-xs-left\" role=\"columnheader\">Название</th>\n                                                <th className=\"text-xs-right\" role=\"columnheader\">Дата открытия</th>\n                                                <th className=\"text-xs-center\" role=\"columnheader\">Валюта</th>\n                                                <th className=\"text-xs-right\" role=\"columnheader\">Фикс. комиссия</th>\n                                                <th className=\"text-xs-right\" role=\"columnheader\" width=\"20\"></th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n\n                                                { loading ? SPINNER : \n\n                                                    portfolios.map(portfolio => (\n                                                        <tr>\n                                                            <td  onClick={() => handlePortfolioSelect(portfolio)}>{ portfolio.title }</td>\n                                                            <td  onClick={() => handlePortfolioSelect(portfolio)}>{ portfolio.dateopen.slice(0,10) }</td>\n                                                            <td  onClick={() => handlePortfolioSelect(portfolio)}>{ portfolio.currency }</td>\n                                                            <td  onClick={() => handlePortfolioSelect(portfolio)}>{ portfolio.comission }</td>\n                                                            <td>\n                                                                <TableCellMenu \n                                                                    onEdit={() => handleEditPortfolio(portfolio)}\n                                                                    onDelete={() => handleDeletePortfolio(portfolio)}\n                                                                />\n                                                            </td>\n                                                        </tr>\n                                                    ))\n\n                                                }\n\n                                        </tbody>\n                                        \n                                    </table>\n                                </div>\n                            </div>\n                        </Card.Body>\n                    </Card>\n\n                </div>\n            </div>\n\n        </div>\n    );\n\n}","/home/vadimkus/projects/nodejs/finista/client/src/components/Toolbar/index.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/components/Toolbar/Toolbar.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/pages/PortfolioEdit/index.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/pages/PortfolioEdit/PortfolioEdit.js",["406","407","408"],"import React, { useState, useEffect } from 'react';\n\nimport { Card, Button } from 'react-bootstrap';\n\nimport { authenticationService } from '../../services';\n\nimport { postRequest } from '../../helpers';\nimport { authHeader } from '../../helpers';\n\nimport { NotificationManager } from 'react-notifications';\n\nexport default function PortfolioEdit(props) {\n\n    const [portfolio, setPortfolio] = useState({\n        title: '',\n        currency: 'RUB',\n        comission: '0.00',\n        dateopen: new Date().toISOString().slice(0,10),\n        memo: '',\n        userId: authenticationService.currentUserValue.user.id\n    });\n\n    useEffect(() => {\n        if (Object.keys(props.location.state).length > 0) {\n            setPortfolio(props.location.state);\n        };\n    }, []);\n\n    const handleUserInput = (e) => {\n        const { name, value } = e.target;\n        setPortfolio({ ...portfolio, [name]: value });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        postRequest('/portfolios/save', portfolio)\n        .then(result => {\n            if (result.portfolio) {\n                NotificationManager.success('Portfolio saved successfully', 'Success', 2000);\n                props.history.push('/portfolios');\n                return;\n            }\n            if (result.message) {\n                NotificationManager.success(result.message, 'Success', 2000);\n                props.history.push('/portfolios');\n                return;\n            }\n        })\n        .catch(err => {\n            NotificationManager.error(err, 'Error', 2000);\n        });\n    };\n\n    return (\n        <div className=\"container-fluid\">\n            <h1 className=\"h3 mb-4 text-gray-800\">Свойства портфеля</h1>\n\n            <Card className=\"shadow mb-4\">\n                <Card.Body>\n                    <form className=\"form\" method=\"post\" onSubmit={ handleSubmit } >\n                        <div className=\"form-group form-row\">\n                            <label htmlFor=\"title\">* Название портфеля:</label>\n                            <input class=\"form-control mr-sm-2\" id=\"title\" name=\"title\" type=\"text\" value={portfolio.title} placeholder=\"Введите название портфеля\" required=\"required\" onChange={handleUserInput} />\n                        </div>\n                        <div className=\"form-group form-row\">\n                            <div className=\"col\">\n                                <label htmlFor=\"currency\" class=\"mr-sm-2\">Валюта:</label>\n                                <select \n                                    name=\"currency\" \n                                    id=\"currency\" \n                                    className=\"form-control mr-sm-2\" \n                                    value={ portfolio.currency } \n                                    onChange={ handleUserInput }\n                                >\n                                    <option value=\"RUB\">\n                                            RUB\n                                    </option>\n                                    <option value=\"USD\">\n                                            USD\n                                    </option>\n                                    <option value=\"EUR\">\n                                            EUR\n                                    </option>\n                                    <option value=\"GBP\">\n                                            GBP\n                                    </option>\n                                </select>\n                            </div>\n                            <div className=\"col\">\n                            <label htmlFor=\"comission\" class=\"mr-sm-2\">Комиссия по умолчанию, %:</label>\n                                <input className=\"form-control mr-sm-2\" id=\"comission\" type=\"text\" name=\"comission\" value={ portfolio.comission } onChange={ handleUserInput } />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group form-row\">\n                                <label htmlFor=\"dateopen\" class=\"mr-sm-2\">Дата открытия:</label>\n                                <input type=\"date\" id=\"dateopen\" name=\"dateopen\" className=\"form-control mr-sm-2\" \n                                value={ portfolio.dateopen ? portfolio.dateopen.slice(0,10) : new Date().toISOString().slice(0,10) }  onChange={ handleUserInput } />\n                        </div>\n                        \n                        <div className=\"form-group form-row\">\n                            <label htmlFor=\"memo\">Описание:</label>\n                            <textarea name=\"memo\" className=\"form-control mr-sm-2\" placeholder=\"Описание\"  onChange={ handleUserInput } >\n                                { portfolio.memo }\n                            </textarea>\n                        </div>\n\n                        <div className=\"form-group form-row d-flex justify-center ml-2\">\n                            <button type=\"submit\" className=\"btn btn-primary btn-sm mr-sm-2\">Сохранить</button>\n                            <a href=\"/portfolios\" className=\"btn btn-primary btn-sm\">Отменить</a>\n                        </div>\n                    </form>\n                </Card.Body>\n            </Card>\n        </div>\n    );\n\n}","/home/vadimkus/projects/nodejs/finista/client/src/pages/Trades/index.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/pages/Trades/Trades.js",["409","410","411"],"import React, { useState, useEffect } from 'react';\n\nimport { \n    Card,\n    Button\n} from 'react-bootstrap';\n\nimport { NotificationManager } from 'react-notifications';\n\nimport Spinner from '../../components/Spinner';\n\nimport { getRequest, postRequest } from '../../helpers';\n\nimport ReactTable from '../../components/ReactTable';\n\nimport TableCellMenu from '../../components/TableCellMenu';\n\nimport Toolbar from '../../components/Toolbar';\n\nexport default function Trades(props) {\n\n    const [portfolio, setPortfolio] = useState({});\n\n    const [trades, setTrades] = useState([]);\n\n    const [loading, setLoading] = useState(true);\n\n    const SPINNER = (<div><Spinner /></div>);\n\n    useEffect(() => {\n        const portfolio = JSON.parse(localStorage.getItem('portfolio'));\n        if (portfolio) {\n            setPortfolio(portfolio);\n        } else {\n            props.history.push({\n                pathname: '/portfolios', \n                state: {\n                    from: '/portfolio/trades'\n                }\n            });\n        }\n        // get trades\n        getTrades(portfolio.id);\n\n    }, []);\n\n    const getTrades = (portfolioId) => {\n        const endPoint = '/portfolio/' + portfolioId + '/trades';\n        getRequest(endPoint)\n        .then(results => {\n            if (results.error) {\n                NotificationManager.error(results.error, 'Error', 2000);\n                return;\n            }\n            setTrades(results.trades);\n            setLoading(false);\n        })\n        .catch(err => {\n            NotificationManager.error(err, 'Error', 2000);\n        });\n    }\n\n    const handleNewTrade = () => {\n        props.history.push({\n            pathname: '/portfolio/trades/edit',\n            state: {}\n        })\n    }\n\n    const handleEditTrade = (trade) => {\n        props.history.push({\n            pathname: '/portfolio/trades/edit',\n            state: trade\n        });\n    }\n\n    const handleDeleteTrade = (trade) => {\n        const endPoint = '/portfolio/trades/delete';\n        postRequest(endPoint, trade)\n        .then(result => {\n            if (result.message) {\n                NotificationManager.success(result.message, 'Success', 2000);\n                getTrades(portfolio.id);\n                return;\n            }\n            if (result.error) {\n                if (result.error.name == 'SequelizeValidationError') {\n                    result.error.errors.map(item => {\n                        NotificationManager.error(item.message, 'Error', 2000);\n                    });\n                } else {\n                    NotificationManager.error(result.error, 'Error', 2000);\n                }\n            }\n        })\n        .catch(err => {\n            NotificationManager.error(err, 'Error', 2000);\n        })\n    }\n\n\n    const columns = [\n        {\n            accessor: 'secid',\n            Header: 'Тикер',\n        },\n        {\n            Header: 'Операция',\n            accessor: 'operation.title'\n        },\n        {\n            accessor: 'date',\n            Header: 'Дата',\n            Cell: (row) => row.value.slice(0,10)\n        },\n        {\n            Header: 'Количество',\n            accessor: 'amount'\n        },\n        {\n            accessor: 'price',\n            Header: 'Цена'\n        },\n        {\n            accessor: 'comission',\n            Header: 'Комиссия'\n        },\n        {\n            accessor: (original) => {\n                return (original.price * original.amount + Number(original.comission)).toFixed(2);\n            },\n            Header: 'Сумма',\n        },\n        {\n            accessor: (original) => <TableCellMenu onEdit={() => handleEditTrade(original)} onDelete={() => handleDeleteTrade(original)} />,\n            id: 'Row menu'\n        }\n    ];\n\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"d-sm-flex align-items-center justify-content-between mb-4\">\n                <h1 className=\"h3 mb-4 text-gray-800\">Сделки - { portfolio.title } </h1>\n            </div>\n\n            <Card className=\"shadow mb-4\">\n                <Card.Body>\n                    <Toolbar>\n                        <Button\n                            variant=\"primary\"\n                            size=\"sm\"\n                            onClick={handleNewTrade}\n                        >\n                            Добавить сделку\n                        </Button>\n                    </Toolbar>\n\n                    { loading ? SPINNER : <ReactTable columns={columns} data={ trades } /> }\n                </Card.Body>\n            </Card>\n\n        </div>\n    );\n\n}","/home/vadimkus/projects/nodejs/finista/client/src/helpers/portfolio.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/components/TableCellMenu/index.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/components/TableCellMenu/TableCellMenu.js",["412"],"import React from 'react';\n\nimport { faEllipsisH } from '@fortawesome/free-solid-svg-icons';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport default function TableCellMenu(props) {\n    return (\n        <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item dropdown no-arrow mx-1\">\n                        <a className=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            <FontAwesomeIcon icon={faEllipsisH} />\n                        </a>\n                        <div className=\"dropdown-menu dropdown-menu-right shadow\" aria-labelledby=\"userDropdown\">\n                                            \n                            <button className=\"btn btn-sm dropdown-item\" style={{display:'inline-block'}} placeholder=\"Редактировать\" onClick={props.onEdit} >\n                                <span className=\"mr-2\">\n                                    <FontAwesomeIcon icon={faEdit} />\n                                </span>\n                                Редактировать\n                            </button>\n\n                            <button className=\"btn btn-sm dropdown-item\" style={{display:'inline-block'}} placeholder=\"Удалить\" onClick={props.onDelete} >\n                                <span className=\"mr-2\">\n                                    <FontAwesomeIcon icon={faTimes} />\n                                </span>\n                                Удалить\n                            </button>\n\n\n                        </div>\n                </li>\n        </ul>\n    );\n}","/home/vadimkus/projects/nodejs/finista/client/src/pages/TradeEdit/index.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/pages/TradeEdit/TradeEdit.js",["413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432"],"import React, { useState, useEffect } from 'react';\n\nimport { \n    Card,\n    Button,\n    Form,\n    Row,\n    Col\n} from 'react-bootstrap';\n\nimport BaseSelect from 'react-select';\n\nimport { getRequest, postRequest } from '../../helpers';\n\nimport { NotificationManager } from 'react-notifications';\n\nimport Spinner from '../../components/Spinner';\n\nimport SelectSecids from '../../components/SelectSecids';\n\nimport FixRequiredSelect from '../../components/FixRequiredSelect';\n\nconst Select = props => (\n  <FixRequiredSelect\n    {...props}\n    SelectComponent={BaseSelect}\n    options={props.options}\n  />\n);\n\n\nconst tradeTypeOptions = [\n    {\n        value: '0',\n        label: 'Акция/ETF/ПИФ'\n    },\n    {\n        value: '1',\n        label: 'Облигация'\n    },\n    {\n        value: '2',\n        label: 'Деньги'\n    }\n];\n\nconst shareOptions = [\n        {\n            value: '1',\n            label: 'Покупка'\n        },\n        {\n            value: '2',\n            label: 'Продажа'\n        },\n        {\n            value: '3',\n            label: 'Дивиденд'\n        }\n    ];\n\n    const bondOptions = [\n        {\n            value: '7',\n            label: 'Покупка'\n        },\n        {\n            value: '8',\n            label: 'Продажа'\n        },\n        {\n            value: '4',\n            label: 'Погашение'\n        },\n        {\n            value: '5',\n            label: 'Купон'\n        },\n        {\n            value: '6',\n            label: 'Амортизация'\n        }\n    ];\n\n    const casheOptions = [\n        {\n            value: '1',\n            label: 'Внести'\n        },\n        {\n            value: '2',\n            label: 'Вывести'\n        }\n    ];\n\nexport default function TradeEdit(props) {\n\n    const [portfolio, setPortfolio] = useState({});\n\n    const [trade, setTrade] = useState({\n        id: '',\n        portfolioId: '',\n        secid: '',\n        operationId: '1',\n        date: new Date().toISOString().slice(0, 10),\n        price: '',\n        amount: '',\n        value: '100',\n        accint: '0',\n        comission: '',\n        comment: ''\n    });\n\n    const [tradeType, setTradeType] = useState(tradeTypeOptions[0]);\n\n    const [loading, setLoading] = useState(true);\n\n    const [secids, setSecids] = useState([]);\n\n    const [secidSelected, setSecidSelected] = useState({});\n\n    const [selectOperation, setSelectOperation] = useState({});\n\n    const [activeOperations, setActiveOperations] = useState({});\n\n    const SPINNER = (<div><Spinner /></div>);\n\n\n\n    useEffect(() => {\n\n        // get secids for options\n        const fetchOptions = async () => {\n            const result = await getSecids();\n        }\n        fetchOptions();\n\n        // set portfolio state or redirect to select portfolio\n        const portfolio = JSON.parse(localStorage.getItem('portfolio'));\n        if (portfolio) {\n            setPortfolio(portfolio);\n            let value = portfolio.id;\n            setTrade({...trade, ['portfolioId']:value});\n        } else {\n            props.history.push({\n                pathname: '/portfolios', \n                state: {\n                    from: '/portfolio/trades/edit'\n                }\n            });\n        }\n\n        if (Object.keys(props.location.state).length > 0) {\n            setTrade(props.location.state);\n        }\n        \n        \n\n            switch (props.location.state.group) {\n                case 'Облигация':\n                    setTradeType(tradeTypeOptions[1]);\n                    break;\n                case null:\n                    setTradeType(tradeTypeOptions[2]);\n                    break;\n                default:\n                    setTradeType(tradeTypeOptions[0]);\n                    break;\n            };\n\n        if (props.location.state.secid == 'RUB') {\n            setTradeType(tradeTypeOptions[2]);\n        }\n\n        updateOperation();\n\n        // hide spinner\n        setLoading(false);\n\n    },[]);\n\n    useEffect(() => {\n        updateOperation();\n        if (secids.length > 0 && tradeType.value) {\n            selectSecid(trade.secid);\n        }\n    });\n\n    const updateOperation = () => {\n        let op;\n        switch (tradeType.value) {\n            case '0':\n                op = shareOptions;\n                break;\n            case '1':\n                op = bondOptions;\n                break;\n            case '2':\n                op = casheOptions;\n                break;\n            default:\n                break;\n        }\n        let obj = op.find((element, index, array) => {\n            if (Number(element.value) == trade.operationId) {\n                return true;\n            } else {\n                return false;\n            }\n        });\n        setActiveOperations(op);\n        setSelectOperation(obj);\n    }\n\n    const selectSecid = (secid) => {\n        let obj = secids[tradeType.value].find((element, index, array) => {\n            if (element.value == secid) {\n                return true;\n            } else {\n                return false;\n            }\n        });\n\n        setSecidSelected(obj);\n    }\n\n    \n    const handleTradeType = (obj) => {\n        setTradeType(obj);\n        if (obj.value == '2') {\n            setTrade({...trade, ['secid']:'RUB'});\n        } else {\n            if (trade.secid == 'RUB') {\n                setTrade({...trade, ['secid']:''});\n            }\n        }\n        updateOperation();\n    }\n\n    const handleSecids = (obj) => {\n        setSecidSelected(obj);\n        setTrade({...trade, ['secid']:obj.value});\n    }\n\n    const handleOperations = (obj) => {\n        setSelectOperation(obj);\n        setTrade({...trade, ['operationId']:obj.value});\n    }\n\n    const handleUserInput = (e) => {\n        const { name, value } = e.target;\n        setTrade({ ...trade, [name]: value });\n    };\n\n    const getSecids = () => {\n        const endPoint = '/securities';\n        getRequest(endPoint)\n        .then(request => {\n\n            let shares = [];\n            let bonds = [];\n            let rubles = [];\n\n            request.securities.map((secid) => {\n                if (secid.group === 'Облигация') {\n                    bonds.push({ value: secid.secid, label: secid.secid + ' (' + secid.name + ') ('+secid.group+')' });\n                } else {\n                    shares.push({ value: secid.secid, label: secid.secid + ' (' + secid.name + ') ('+secid.group+')' });\n                }\n            });\n\n            rubles.push({value: 'RUB', label: 'Рубли'});\n\n            let final = [];\n            final[0] = shares;\n            final[1] = bonds;\n            final[2] = rubles;\n            setSecids(final);\n        })\n        .catch(err => {\n            NotificationManager.error(err, 'Error', 2000);\n        });\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        postRequest('/portfolio/trades/save', trade)\n        .then(result => {\n            if (result.trade) {\n                NotificationManager.success('Trade saved successfully', 'Success', 2000);\n                props.history.push('/portfolio/trades');\n                return;\n            }\n            if (result.message) {\n                NotificationManager.success(result.message, 'Success', 2000);\n                props.history.push('/portfolio/trades');\n                return;\n            }\n            if (result.error) {\n                if (result.error.name == 'SequelizeValidationError') {\n                    result.error.errors.map(item => {\n                        NotificationManager.error(item.message, 'Error', 2000);\n                    });\n                } else {\n                    NotificationManager.error(result.error, 'Error', 2000);\n                }\n            }\n        })\n        .catch(err => {\n            NotificationManager.error(err, 'Error', 2000);\n        });\n    }\n\n    \n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"d-sm-flex align-items-center justify-content-between mb-4\">\n                <h1 className=\"h3 mb-4 text-gray-800\">Изменить сделку</h1>\n            </div>\n\n            <Card className=\"shadow mb-4\">\n                <Card.Body>\n                    \n                    { loading ? SPINNER :  \n                    <Form className=\"form\" method=\"post\" onSubmit={ handleSubmit } >\n\n                        <div className=\"form-group form-row\">\n                            <div className=\"col\">\n                                <label htmlFor=\"tradeType\">Тип сделки:</label>\n                                <Select \n                                    id=\"tradeType\" \n                                    onChange={handleTradeType} \n                                    options={ tradeTypeOptions }  \n                                    isSearchable={false}\n                                    value={ tradeType }\n                                />\n                            </div>\n                            { tradeType.value !== '2' && (\n                            <div className=\"col\">\n                                <label htmlFor=\"secid\">\n                                    Тикер*\n                                </label>\n                                <Select \n                                    id=\"secid\" \n                                    options={ secids[tradeType.value] }\n                                    value = { secidSelected }\n                                    onChange={ handleSecids }\n                                    required={'required'}\n                                />\n                            </div>\n                            )}\n                            \n                        </div>\n\n                        <div className=\"form-group form-row\">\n                            <div className=\"col\">\n                                <label htmlFor=\"operationId\" classТфьу=\"\">Операция:</label>\n                                <Select \n                                    id=\"operationId\" \n                                    name=\"operationId\" \n                                    required=\"required\" \n                                    value={selectOperation}\n                                    options={ activeOperations }\n                                    onChange={ handleOperations }\n                                />\n                                   \n                            </div>\n                            <div className=\"col\">\n                                <label htmlFor=\"date\" className=\"\">Дата:*</label>\n                                <input \n                                    type=\"date\" \n                                    id=\"date\" \n                                    className=\"form-control sm-2\" \n                                    name=\"date\" \n                                    value={trade.date ? trade.date.slice(0,10) : new Date().toISOString().slice(0,10)} \n                                    required=\"required\" \n                                    onChange={ handleUserInput }\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group form-row\">\n                            <div className=\"col\">\n                                <label ntmlFor=\"price\" class=\"\" id=\"labelPrice\">Цена:*</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"price\" \n                                    className=\"form-control sm-2 mb-2\" \n                                    name=\"price\" \n                                    value={trade.price} \n                                    required=\"required\" \n                                    onChange={ handleUserInput }\n                                />\n                            </div>\n                            \n                            {tradeType.value !== '2' && (\n                            <div className=\"col\">\n                                <label htmlFor=\"amount\" className=\"\" id=\"labelAmount\">Количество:*</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"amount\" \n                                    className=\"form-control mr-sm-2 mb-2\" \n                                    name=\"amount\" \n                                    value={trade.amount} \n                                    placeholder=\"Количество\" \n                                    required=\"required\" \n                                    onChange={ handleUserInput }\n                                />\n                            </div>\n                            )}\n                        </div>\n\n                        { tradeType.value === '1' && ( \n\n                        <div className=\"form-row mb-2\">\n                            <div className=\"col\">\n                                <label htmlFor=\"value\" id=\"valueLabel\">Номинал, руб.:*</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"value\" \n                                    className=\"form-control\" \n                                    name=\"value\" \n                                    value={trade.value} \n                                    placeholder=\"Номинал\" \n                                    required=\"required\" \n                                    onChange={ handleUserInput }\n                                />\n                            </div>\n                            <div className=\"col\">\n                                <label htmlFor=\"accint\" id=\"accintLabel\">НКД, руб.:</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"accint\" \n                                    className=\"form-control\" \n                                    name=\"accint\" \n                                    value={trade.accint} \n                                    placeholder=\"НКД\" \n                                    onChange={ handleUserInput }\n                                />\n                            </div>\n                        </div>\n\n                        )}\n\n                        <div className=\"form-group\">\n                            <label htnlFor=\"comission\">Комиссия:</label>\n                            <input \n                                type=\"text\" \n                                id=\"comission\" \n                                className=\"form-control\" \n                                name=\"comission\" \n                                value={trade.comission} \n                                placeholder=\"Комиссия\" \n                                onChange={ handleUserInput }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"comment\">Заметка:</label>\n                            <input \n                                type=\"text\" \n                                id=\"comment\" \n                                className=\"form-control\" \n                                name=\"comment\" \n                                value={trade.comment} \n                                placeholder=\"Заметка\" \n                                onChange={ handleUserInput }\n                            />\n                        </div>\n\n                        <div className=\"form-group justify-center\">\n                            <button type=\"submit\" className=\"btn btn-primary btn-sm mr-sm-2\" >Сохранить</button>\n                            <a href=\"/portfolio/trades\" className=\"btn btn-primary btn-sm mr-sm-2\">Отменить</a>\n                        </div>\n\n                    </Form>\n\n                    }\n                </Card.Body>\n            </Card>\n\n        </div>\n    );\n\n}","/home/vadimkus/projects/nodejs/finista/client/src/components/SelectSecids/index.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/components/SelectSecids/SelectSecids.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/components/FixRequiredSelect/index.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/components/FixRequiredSelect/FixRequiredSelect.js",["433"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst noop = () => {\n  // no operation (do nothing real quick)\n};\n\nclass FixRequiredSelect extends React.Component {\n  state = {\n    value: this.props.value || \"\"\n  };\n\n  selectRef = null;\n  setSelectRef = ref => {\n    this.selectRef = ref;\n  };\n\n  onChange = (value, actionMeta) => {\n    this.props.onChange(value, actionMeta);\n    this.setState({ value });\n  };\n\n  getValue = () => {\n    if (this.props.value != undefined) return this.props.value;\n    return this.state.value || \"\";\n  };\n\n  render() {\n    const { SelectComponent, required, ...props } = this.props;\n    const { isDisabled } = this.props;\n    const enableRequired = !isDisabled;\n\n    return (\n      <div>\n        <SelectComponent\n          {...props}\n          ref={this.setSelectRef}\n          onChange={this.onChange}\n        />\n        {enableRequired && (\n          <input\n            tabIndex={-1}\n            autoComplete=\"off\"\n            style={{\n              opacity: 0,\n              width: \"100%\",\n              height: 0,\n              position: \"absolute\"\n            }}\n            value={this.getValue()}\n            onChange={noop}\n            onFocus={() => this.selectRef.focus()}\n            required={required}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nFixRequiredSelect.defaultProps = {\n  onChange: noop\n};\n\nFixRequiredSelect.protoTypes = {\n  // react-select component class (e.g. Select, Creatable, Async)\n  selectComponent: PropTypes.func.isRequired,\n  onChange: PropTypes.func,\n  required: PropTypes.bool\n};\n\nexport default FixRequiredSelect;\n","/home/vadimkus/projects/nodejs/finista/client/src/pages/Actives/index.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/pages/Actives/Actives.js",["434","435","436","437"],"import React, { useState, useEffect } from 'react';\n\nimport { Card } from 'react-bootstrap';\n\nimport { faRubleSign } from \"@fortawesome/free-solid-svg-icons\";\nimport { faCalendar } from \"@fortawesome/free-solid-svg-icons\";\nimport { faClipboardList } from \"@fortawesome/free-solid-svg-icons\";\nimport { faComments } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { NotificationManager } from 'react-notifications';\n\nimport HighchartsReact from 'highcharts-react-official';\nimport Highcharts from 'highcharts/highstock';\n\nimport ReactTableSort from '../../components/ReactTableSort';\n\nimport Spinner from '../../components/Spinner';\n\nimport { getRequest } from '../../helpers';\n\n// spinner\nconst SPINNER = (<div><Spinner /></div>);\n\n\nexport default function Actives(props) {\n\n    const [loading, setLoading] = useState(true);\n\n    const [portfolio, setPortfolio] = useState({});\n\n    const [shares, setShares] = useState([]);\n\n    const [etf, setEtf] = useState([]);\n\n    const [bonds, setBonds] = useState([]);\n\n    const [history, setHistory] = useState([]);\n\n    const chartOptions = {\n        title: {\n            text: null\n        },\n        series: [{\n            name: 'Стоимость портфеля',\n            data: history,\n            tooltip: {\n                valueDecimals: 2\n            }\n        }]\n    };\n\n    useEffect(() => {\n        const portfolio = JSON.parse(localStorage.getItem('portfolio'));\n        if (portfolio) {\n            setPortfolio(portfolio);\n        } else {\n            props.history.push({\n                pathname: '/portfolios', \n                state: {\n                    from: '/portfolio/trades'\n                }\n            });\n        };\n\n        loadData(portfolio.id);\n\n        setLoading(false);\n\n    }, []);\n\n    const loadData = (portfolioId) => {\n        const endPoint = '/portfolio/' + portfolioId + '/actives';\n        getRequest(endPoint)\n        .then(results => {\n            if (results.error) {\n                NotificationManager.error(results.error, 'Error', 2000);\n                return;\n            }\n            setPortfolio(results.data.portfolio);\n            setShares(results.data.shares);\n            setEtf(results.data.etf);\n            setBonds(results.data.bonds);\n            setHistory(results.data.history);\n            setLoading(false);\n        })\n        .catch(err => {\n            NotificationManager.error(err, 'Error', 2000);\n        });\n    }\n\n    const getClassName = (value) => {\n        if (Number(value) > 0) {\n            return 'text-success';\n        } else if (Number(value) < 0) {\n            return 'text-danger';\n        } else {\n            return '';\n        }\n    }\n\n    const columns = [\n        {\n            Header: 'Тикер',\n            accessor: 'secid',\n            Cell: (row) => (<a href={'/quotes'+row.value}>{row.value}</a>)\n        },\n        {\n            Header: 'Название',\n            accessor: 'SHORTNAME'\n        },\n        {\n            Header: 'Количество',\n            accessor: 'amount',\n        },\n        {\n            Header: 'Средняя цена',\n            accessor: 'meanPrice',\n            Cell: (row) => (<span>{Number(row.value).toFixed(2)}</span>)\n        },\n        {\n            Header: 'Текущая цена',\n            accessor: 'last',\n            Cell: (row) => (<span>{Number(row.value).toFixed(2)}</span>)\n        },\n        {\n            Header: 'Стоимость',\n            accessor: 'cost',\n            Cell: (row) => (<span>{Number(row.value).toFixed(2)}</span>)\n        },\n        {\n            Header: 'Курсовая прибыль, %',\n            accessor: 'exchangeProfitPrc',\n            Cell: (row) => (<span className={getClassName(row.value)}>{Number(row.value).toFixed(2)}</span>),\n        },\n        {\n            Header: 'Прибыль',\n            accessor: 'profit',\n            Cell: (row) => (<span className={getClassName(row.value)}>{Number(row.value).toFixed(2)}</span>)\n        },\n        {\n            Header: 'Изменение за день',\n            accessor: 'changePrc',\n            Cell: (row) => (<span className={getClassName(row.value)}>{Number(row.value).toFixed(2)} %</span>)\n        },\n        {\n            Header: 'Текущая доля',\n            accessor: 'percentage',\n            Cell: (row) => (<span>{Number(row.value).toFixed(2)}</span>)\n        }\n    ];\n\n    const data = [\n        {\n            secid: 'AFLT'\n        },\n        {\n            secid: 'GAZP'\n        }\n    ];\n\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"d-sm-flex align-items-center justify-content-between mb-4\">\n                <h1 className=\"h3 mb-4 text-gray-800\">Портфель - { portfolio.title }</h1>\n            </div>\n\n            <div className=\"row\">\n\n                <div class=\"col-xl-3 col-md-6 mb-4\">\n                    <Card className=\"border-left-primary shadow h-100 py-2\">\n                        <Card.Body>\n                            <div className=\"row no-gutters align-items-center\">\n                                <div className=\"col mr-2\">\n                                    <div className=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">\n                                        Стоимость\n                                    </div>\n                                    <div className=\"h5 mb-0 font-weight-bold text-gray-800\">\n                                        { Number(portfolio.cost).toFixed(2) }\n                                        <span className=\"ml-2\">\n                                            <FontAwesomeIcon icon={ faRubleSign } size=\"sm\"  />\n                                        </span>\n                                    </div>\n                                </div>\n                                <div class=\"col-auto\">\n                                    <FontAwesomeIcon icon={ faRubleSign } size=\"2x\" className=\"text-gray-300\" />\n                                </div>\n                            </div>\n                        </Card.Body>\n                    </Card>\n                </div>\n\n                <div class=\"col-xl-3 col-md-6 mb-4\">\n                    <Card className=\"border-left-success shadow h-100 py-2\">\n                        <Card.Body>\n                            <div className=\"row no-gutters align-items-center\">\n                                <div className=\"col mr-2\">\n                                    <div className=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">\n                                        Прибыль\n                                    </div>\n                                    <div className=\"h5 mb-0 font-weight-bold text-gray-800\">\n                                        <span className={ getClassName(portfolio.profit) }>\n                                            { Number(portfolio.profit).toFixed(2) }\n                                             <span className=\"ml-2\">\n                                                <FontAwesomeIcon icon={ faRubleSign } size=\"sm\"  />\n                                            </span>\n                                        </span>\n                                    </div>\n                                </div>\n                                <div class=\"col-auto\">\n                                    <FontAwesomeIcon icon={ faCalendar } size=\"2x\" className=\"text-gray-300\" />\n                                </div>\n                            </div>\n                        </Card.Body>\n                    </Card>\n                </div>\n\n                <div class=\"col-xl-3 col-md-6 mb-4\">\n                    <Card className=\"border-left-info shadow h-100 py-2\">\n                        <Card.Body>\n                            <div className=\"row no-gutters align-items-center\">\n                                <div className=\"col mr-2\">\n                                    <div className=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">\n                                        Годовая доходность\n                                    </div>\n                                    <div className=\"h5 mb-0 font-weight-bold text-gray-800\">\n                                        <span className={ getClassName(portfolio.xirr) }>\n                                            { Number(portfolio.xirr).toFixed(2) }\n                                            <span> %</span>\n                                        </span>\n                                    </div>\n                                </div>\n                                <div class=\"col-auto\">\n                                    <FontAwesomeIcon icon={ faClipboardList } size=\"2x\" className=\"text-gray-300\" />\n                                </div>\n                            </div>\n                        </Card.Body>\n                    </Card>\n                </div>\n\n                <div class=\"col-xl-3 col-md-6 mb-4\">\n                    <Card className=\"border-left-warning shadow h-100 py-2\">\n                        <Card.Body>\n                            <div className=\"row no-gutters align-items-center\">\n                                <div className=\"col mr-2\">\n                                    <div className=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">\n                                        Изменение за день\n                                    </div>\n                                    <div className=\"h5 mb-0 font-weight-bold text-gray-800\">\n                                        <span className={ getClassName(portfolio.change) }>\n                                        { Number(portfolio.change).toFixed(2) }\n                                            <span className=\"ml-2\">\n                                                <FontAwesomeIcon icon={ faRubleSign } size=\"sm\"  />\n                                            </span>\n                                            <span className=\"ml-2\">\n                                                ({Number(portfolio.changePrc).toFixed(2)}\n                                                    <span className=\"ml-2\">%</span>)\n                                            </span>\n                                         </span>\n                                    </div>\n                                </div>\n                                <div class=\"col-auto\">\n                                    <FontAwesomeIcon icon={ faComments } size=\"2x\" className=\"text-gray-300\" />\n                                </div>\n                            </div>\n                        </Card.Body>\n                    </Card>\n                </div>\n\n            </div>\n\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <Card className=\"shadow mb-4\">\n                        <Card.Header className=\"py-3\">\n                            <h6 class=\"m-0 text-primary font-weight-bold\">Состав портфеля по активам</h6>\n                        </Card.Header>\n                        <Card.Body>\n                            <table className=\"table table-striped table-bordered\">\n                                <thead>\n                                    <tr>\n                                        <th>Актив</th>\n                                        <th>Текущая стоимость</th>\n                                        <th>Прибыль</th>\n                                        <th>Изменение за день</th>\n                                        <th>Текущая доля, %</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    { (portfolio.shares && portfolio.shares.cost > 0) && (\n                                    <tr>\n                                        <td>Акции</td>\n                                        <td>{ Number(portfolio.shares.cost).toFixed(2) }</td>\n                                        <td className=\n                                        { getClassName(portfolio.shares.profit) }\n                                        >\n                                            { Number(portfolio.shares.profit).toFixed(2) }\n                                        </td>\n                                        <td className=\n                                        { getClassName(portfolio.shares.change) }\n                                        >\n                                            { Number(portfolio.shares.change).toFixed(2) } ({Number(portfolio.shares.changePrc).toFixed(2)} %)</td>\n                                        <td>{ Number(portfolio.shares.percentage).toFixed(2) }</td>\n                                    </tr>\n                                    )}\n                                    { (portfolio.etf && portfolio.etf.cost > 0) && (\n                                    <tr>\n                                        <td>ETF/ПИФ</td>\n                                        <td>\n                                            { Number(portfolio.etf.cost).toFixed(2) }\n                                        </td>\n                                        <td className=\n                                        { getClassName(portfolio.etf.profit) }\n                                        >\n                                            { Number(portfolio.etf.profit).toFixed(2) }\n                                        </td>\n                                        <td className={ getClassName(portfolio.etf.change) } >\n                                            { Number(portfolio.etf.change).toFixed(2) } ({Number(portfolio.etf.changePrc).toFixed(2)} %)\n                                        </td>\n                                        <td>{ Number(portfolio.etf.percentage).toFixed(2) }</td>\n                                    </tr>\n                                    )}\n                                    { (portfolio.bonds && portfolio.bonds.cost > 0) && (\n                                    <tr>\n                                        <td>Облигации</td>\n                                        <td>{ Number(portfolio.bonds.cost).toFixed(2) }</td>\n                                        <td  className=\n                                        { getClassName(portfolio.bonds.profit) }\n                                        >\n                                            { Number(portfolio.bonds.profit).toFixed(2) }\n                                        </td>\n                                        <td  className=\n                                        { getClassName(portfolio.bonds.change) }\n                                        >\n                                            { Number(portfolio.bonds.change).toFixed(2) } ({Number(portfolio.bonds.changePrc).toFixed(2)} %)\n                                        </td>\n                                        <td>{ Number(portfolio.bonds.percentage).toFixed(2) }</td>\n                                    </tr>\n                                    )}\n                                    <tr>\n                                        <td>Рубли</td>\n                                        <td>{ Number(portfolio.cashe).toFixed(2) }</td>\n                                        <td>-</td>\n                                        <td>-</td>\n                                        <td>{ Number(portfolio.cashePercentage).toFixed(2) }</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n\n\n\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n\n{ shares.length > 0 && (\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <Card className=\"shadow mb-4\">\n                        <Card.Header className=\"py-3\">\n                            <h6 class=\"m-0 text-primary font-weight-bold\">Акции</h6>\n                        </Card.Header>\n                        <Card.Body>\n\n                           <ReactTableSort columns={columns} data={shares} />\n\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n)}\n\n            {etf.length > 0 && (\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <Card className=\"shadow mb-4\">\n                        <Card.Header className=\"py-3\">\n                            <h6 class=\"m-0 text-primary font-weight-bold\">ETF/ПИФ</h6>\n                        </Card.Header>\n                        <Card.Body>\n\n                            <ReactTableSort columns={ columns } data={ etf } />\n\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n            )}\n\n            {bonds.length > 0 && (\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <Card className=\"shadow mb-4\">\n                        <Card.Header className=\"py-3\">\n                            <h6 class=\"m-0 text-primary font-weight-bold\">Облигации</h6>\n                        </Card.Header>\n                        <Card.Body>\n                            <ReactTableSort columns={ columns } data={ bonds } />\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n            )}\n\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <Card className=\"shadow mb-4\">\n                        <Card.Header className=\"py-3\">\n                            <h6 class=\"m-0 text-primary font-weight-bold\">Стоимость портфеля</h6>\n                        </Card.Header>\n                        <Card.Body>\n                            <div>\n                            <HighchartsReact\n                                highcharts={Highcharts}\n                                constructorType={'stockChart'}\n                                options={chartOptions}\n\n                            />\n                            </div>\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n\n\n\n        </div>\n    );\n\n}","/home/vadimkus/projects/nodejs/finista/client/src/components/ReactTableSort/index.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/components/ReactTableSort/ReactTableSort.js",["438","439"],"import React, { useState, useEffect } from 'react';\n\nimport { useTable, useSortBy } from 'react-table';\n\nimport { faSort } from \"@fortawesome/free-solid-svg-icons\";\nimport { faSortUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { faSortDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default function ReactTableSort({columns, data}) {\n\n    \n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow\n    } = useTable(\n        {\n            columns,\n            data\n        },\n        useSortBy\n    );\n\n    return (\n        <div className=\"row\">\n            <div className=\"col\">\n                <table className=\"table table-striped table-hover table-bordered\" {...getTableProps()}>\n                    <thead>\n                        {headerGroups.map((headerGroup) => (\n                            <tr {...headerGroup.getHeaderGroupProps()}>\n                                {headerGroup.headers.map(column => (\n                                    <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                                        {column.render('Header')}\n                                        <span className=\"ml-2\">\n                                                {column.isSorted\n                                                    ? column.isSortedDesc\n                                                        ? <FontAwesomeIcon icon={faSortDown} />\n                                                        : <FontAwesomeIcon icon={faSortUp} />\n                                                    : <FontAwesomeIcon icon={faSort} className=\"text-gray-300\" />}\n                                        </span>\n                                    </th>\n                                ))}\n                            </tr>\n                        ))}\n                    </thead>\n                    <tbody {...getTableBodyProps()}>\n                        {rows.map((row, i) => {\n                            prepareRow(row);\n                            return (\n                                <tr {...row.getRowProps()}>\n                                    {row.cells.map(cell => {\n                                        return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                    })}\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n\n}","/home/vadimkus/projects/nodejs/finista/client/src/pages/Rebalance/index.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/pages/Rebalance/Rebalance.js",["440","441","442","443","444","445","446","447","448","449","450","451","452","453","454"],"/home/vadimkus/projects/nodejs/finista/client/src/pages/Goals/index.js",[],"/home/vadimkus/projects/nodejs/finista/client/src/pages/Goals/Goals.js",["455","456","457","458","459"],"import React, { useState, useEffect } from 'react';\n\nimport { \n    Card,\n    Button\n} from 'react-bootstrap';\n\nimport { NotificationManager } from 'react-notifications';\n\nimport { faEllipsisH, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport Select from 'react-select';\n\nimport { getRequest, postRequest } from '../../helpers';\n\nimport './table-input.css';\n\n\nexport default function Goals(props) {\n\n    const [portfolio, setPortfolio] = useState({});\n\n    const [goals, setGoals] = useState([]);\n\n    const [securities, setSecurities] = useState([]);\n\n    const [sum, setSum] = useState(0);\n\n    const [selectSecurity, setSelectSecurity] = useState({});\n\n    useEffect(() => {\n        const portfolio = JSON.parse(localStorage.getItem('portfolio'));\n        if (portfolio) {\n            setPortfolio(portfolio);\n        } else {\n            props.history.push({\n                pathname: '/portfolios', \n                state: {\n                    from: '/portfolio/rebalance/goals'\n                }\n            });\n        };\n\n        getGoals(portfolio.id);\n        getSecurities();\n\n    }, []);\n\n    useEffect(() => {\n        let s = 0;\n        goals.map(goal => {\n            s += Number(goal.amount);\n        });\n        setSum(s);\n    }, [goals]);\n\n    const getGoals = (portfolioId) => {\n        const endPoint = '/portfolio/'+portfolioId+'/goals';\n        getRequest(endPoint)\n        .then(result => {\n            setGoals(result.goals);\n        })\n        .catch(err => {\n            NotificationManager.error(err, 'Error', 2000);\n        });\n    }\n\n    const getSecurities = () => {\n        const endPoint = '/securities';\n        getRequest(endPoint)\n        .then(request => {\n\n            let securities = [];\n\n            request.securities.map((secid) => {\n                securities.push({ value: secid.secid, label: secid.secid + ' (' + secid.name + ') ('+secid.group+')' });\n            });\n\n            setSecurities(securities);\n        })\n        .catch(err => {\n            NotificationManager.error(err, 'Error', 2000);\n        });\n    }\n\n\n\n    const handleInput = (e) => {\n//        e.preventDefault();\n        var { name, value } = e.target;\n        const index = goals.findIndex((element) => {\n            if (element.secid === name) {\n                return true;\n            } else {\n                return false;\n            }\n        });\n\n        value = parseFloat(value);\n\n        const _goals = [...goals];\n        _goals[index].amount = value;\n        setGoals(_goals);\n    }\n\n    const handleDeleteRow = (secid, e) => {\n        // e.preventDefault();\n        const index = goals.findIndex((element) => {\n            if (element.secid === secid) {\n                return true;\n            } else {\n                return false;\n            }\n        });\n        var _goals = [...goals];\n        _goals.splice(index, 1);\n        setGoals(_goals);\n    }\n\n    const handleAddRow = () => {\n        if (Object.keys(selectSecurity).length > 0) {\n            let res = goals.findIndex((element) => {\n                if (element.secid === selectSecurity.value) {\n                    return true;\n                } else {\n                    return false;\n                }\n            });\n            if (res === -1) {\n                const _goals = [...goals];\n                let obj = {\n                    amount: '0.00',\n                    id: '',\n                    secid: selectSecurity.value\n                };\n                _goals.push(obj);\n                setGoals(_goals);\n            }\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const endPoint = '/portfolio/'+portfolio.id+'/goals';\n        postRequest(endPoint, goals)\n        .then(result => {\n            if (result.success) {\n                NotificationManager.success('Goals saved successfully', 'Success', 2000);\n                props.history.push('/portfolio/rebalance');\n                return;\n            }\n            if (result.message) {\n                NotificationManager.info(result.message, 'Info', 2000);\n                return;\n            }\n        })\n        .catch(err => {\n            NotificationManager.error(err, 'Error', 2000);\n        });\n    };\n\n    const handleSecurity = (obj) => {\n        setSelectSecurity(obj);\n    }\n\n    const cellMenu = (secid) => (\n        <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item dropdown no-arrow mx-1\">\n                <a className=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    <FontAwesomeIcon icon = { faEllipsisH } />\n                </a>\n                <div className=\"dropdown-menu dropdown-menu-right shadow\" aria-labelledby=\"userDropdown\">\n                    <button \n                        type=\"button\" \n                        className=\"btn btn-sm dropdown-item\" \n                        placeholder=\"Удалить\" \n                        onClick={ (e) => handleDeleteRow(secid, e) }\n                    >\n                        <FontAwesomeIcon icon={ faTimes } size=\"sm\" className=\"mr-2 text-gray-400\" />\n                        Удалить\n                    </button>\n                </div>\n            </li>\n        </ul>\n    );\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"d-sm-flex align-items-center justify-content-between mb-4\">\n                <h1 className=\"h3 text-gray-800\">Редактирование целей</h1>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"col-xl-6 \">\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-4\">\n                            <Select \n                                id=\"secid\" \n                                options={ securities }\n                                value = { selectSecurity }\n                                placeholder='Выберите бумагу...'\n                                onChange={ handleSecurity }\n                            />\n                        </div>\n                        <div className=\"form-group col-md-2\">\n                            <button type=\"button\" className=\"btn btn-primary btn-sm ml-auto form-control\" onClick={handleAddRow} >Добавить</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"col-6\">\n                    <Card className=\"shadow mb-4\">\n                        <Card.Body>\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <table className=\"table table-bordered table-sm input\" id=\"secidsTable\">\n                                        <thead>\n                                            <tr>\n                                                <th>Тикер</th>\n                                                <th>Состав</th>\n                                                <th className=\"text-xs-right\" role=\"columnheader\" width=\"20\"></th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {goals.map((goal, i) => (\n                                                <tr>\n                                                    <td>{ goal.secid }</td>\n                                                    <td>\n                                                        <input \n                                                            type=\"text\"\n                                                            name={ goal.secid }\n                                                            value={ goal.amount }\n                                                            onChange={ handleInput }\n                                                        />\n                                                    </td>\n                                                    <td>\n                                                        { cellMenu(goal.secid) }\n                                                    </td>\n                                                </tr>\n                                            ))}\n                                        </tbody>\n                                        <tfooter className=\"inline-block\">\n                                            <div className=\"row p-2\">\n                                                <div className=\"col-12\">\n                                                    <span className=\"mr-2\">Сумма:</span>\n                                                    <span>{ Number(sum).toFixed(2) }</span>\n                                                </div>\n                                            </div>\n                                        </tfooter>\n                                    </table>\n                                </div>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <div className=\"form-group form-inline justify-content-center\">\n                                        <button \n                                            type=\"submit\" \n                                            className=\"btn btn-primary btn-sm form-control mr-sm-2\" \n                                            onClick = { handleSubmit }\n                                        >\n                                            Сохранить\n                                        </button>\n                                        <a href=\"/portfolio/rebalance\" className=\"btn btn-primary btn-sm mr-sm-2\">Отменить</a>\n                                    </div>\n                                </div>\n                            </div>\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n\n        </div>\n    );\n}",{"ruleId":"460","replacedBy":"461"},{"ruleId":"462","replacedBy":"463"},{"ruleId":"460","replacedBy":"464"},{"ruleId":"462","replacedBy":"465"},{"ruleId":"460","replacedBy":"466"},{"ruleId":"462","replacedBy":"467"},{"ruleId":"468","severity":2,"message":"469","line":1,"column":1,"nodeType":"470","messageId":"471","endLine":1,"endColumn":2},{"ruleId":"472","severity":1,"message":"473","line":2,"column":3,"nodeType":"474","messageId":"475","endLine":2,"endColumn":16,"fix":"476"},{"ruleId":"468","severity":2,"message":"469","line":5,"column":3,"nodeType":"470","messageId":"471","endLine":5,"endColumn":4},{"ruleId":"468","severity":2,"message":"469","line":6,"column":5,"nodeType":"470","messageId":"471","endLine":6,"endColumn":6},{"ruleId":"468","severity":2,"message":"469","line":7,"column":5,"nodeType":"470","messageId":"471","endLine":7,"endColumn":6},{"ruleId":"468","severity":2,"message":"469","line":8,"column":9,"nodeType":"470","messageId":"471","endLine":8,"endColumn":10},{"ruleId":"468","severity":2,"message":"469","line":9,"column":7,"nodeType":"470","messageId":"471","endLine":9,"endColumn":8},{"ruleId":"468","severity":2,"message":"469","line":14,"column":3,"nodeType":"470","messageId":"471","endLine":14,"endColumn":4},{"ruleId":"468","severity":2,"message":"469","line":15,"column":9,"nodeType":"470","messageId":"471","endLine":15,"endColumn":10},{"ruleId":"468","severity":2,"message":"469","line":16,"column":7,"nodeType":"470","messageId":"471","endLine":16,"endColumn":8},{"ruleId":"468","severity":2,"message":"469","line":20,"column":9,"nodeType":"470","messageId":"471","endLine":20,"endColumn":10},{"ruleId":"468","severity":2,"message":"469","line":20,"column":37,"nodeType":"470","messageId":"471","endLine":20,"endColumn":38},{"ruleId":"468","severity":2,"message":"469","line":21,"column":7,"nodeType":"470","messageId":"471","endLine":21,"endColumn":8},{"ruleId":"468","severity":2,"message":"469","line":22,"column":7,"nodeType":"470","messageId":"471","endLine":22,"endColumn":8},{"ruleId":"468","severity":2,"message":"469","line":23,"column":7,"nodeType":"470","messageId":"471","endLine":23,"endColumn":8},{"ruleId":"468","severity":2,"message":"469","line":28,"column":3,"nodeType":"470","messageId":"471","endLine":28,"endColumn":4},{"ruleId":"468","severity":2,"message":"469","line":29,"column":9,"nodeType":"470","messageId":"471","endLine":29,"endColumn":10},{"ruleId":"468","severity":2,"message":"469","line":38,"column":3,"nodeType":"470","messageId":"471","endLine":38,"endColumn":4},{"ruleId":"468","severity":2,"message":"469","line":39,"column":26,"nodeType":"470","messageId":"471","endLine":39,"endColumn":27},{"ruleId":"468","severity":2,"message":"469","line":41,"column":7,"nodeType":"470","messageId":"471","endLine":41,"endColumn":8},{"ruleId":"468","severity":2,"message":"469","line":43,"column":7,"nodeType":"470","messageId":"471","endLine":43,"endColumn":8},{"ruleId":"468","severity":2,"message":"469","line":48,"column":3,"nodeType":"470","messageId":"471","endLine":48,"endColumn":4},{"ruleId":"468","severity":2,"message":"469","line":49,"column":19,"nodeType":"470","messageId":"471","endLine":49,"endColumn":20},{"ruleId":"468","severity":2,"message":"469","line":50,"column":5,"nodeType":"470","messageId":"471","endLine":50,"endColumn":6},{"ruleId":"468","severity":2,"message":"469","line":51,"column":19,"nodeType":"470","messageId":"471","endLine":51,"endColumn":20},{"ruleId":"477","severity":1,"message":"478","line":16,"column":24,"nodeType":"470","messageId":"479","endLine":16,"endColumn":37},{"ruleId":"477","severity":1,"message":"480","line":22,"column":11,"nodeType":"470","messageId":"479","endLine":22,"endColumn":18},{"ruleId":"481","severity":1,"message":"482","line":106,"column":8,"nodeType":"483","endLine":106,"endColumn":10,"suggestions":"484"},{"ruleId":"481","severity":1,"message":"485","line":69,"column":5,"nodeType":"470","endLine":69,"endColumn":14,"suggestions":"486"},{"ruleId":"477","severity":1,"message":"487","line":19,"column":21,"nodeType":"470","messageId":"479","endLine":19,"endColumn":31},{"ruleId":"477","severity":1,"message":"488","line":19,"column":19,"nodeType":"470","messageId":"479","endLine":19,"endColumn":27},{"ruleId":"477","severity":1,"message":"489","line":23,"column":12,"nodeType":"470","messageId":"479","endLine":23,"endColumn":16},{"ruleId":"481","severity":1,"message":"490","line":87,"column":8,"nodeType":"483","endLine":87,"endColumn":10,"suggestions":"491"},{"ruleId":"492","severity":1,"message":"493","line":273,"column":63,"nodeType":"494","messageId":"495","endLine":273,"endColumn":65},{"ruleId":"492","severity":1,"message":"493","line":302,"column":62,"nodeType":"494","messageId":"495","endLine":302,"endColumn":64},{"ruleId":"492","severity":1,"message":"493","line":320,"column":70,"nodeType":"494","messageId":"495","endLine":320,"endColumn":72},{"ruleId":"492","severity":1,"message":"493","line":328,"column":58,"nodeType":"494","messageId":"495","endLine":328,"endColumn":60},{"ruleId":"496","severity":1,"message":"497","line":334,"column":29,"nodeType":"498","endLine":334,"endColumn":63},{"ruleId":"460","replacedBy":"499"},{"ruleId":"462","replacedBy":"500"},{"ruleId":"477","severity":1,"message":"501","line":9,"column":10,"nodeType":"470","messageId":"479","endLine":9,"endColumn":31},{"ruleId":"477","severity":1,"message":"502","line":3,"column":16,"nodeType":"470","messageId":"479","endLine":3,"endColumn":22},{"ruleId":"477","severity":1,"message":"503","line":8,"column":10,"nodeType":"470","messageId":"479","endLine":8,"endColumn":20},{"ruleId":"481","severity":1,"message":"504","line":27,"column":8,"nodeType":"483","endLine":27,"endColumn":10,"suggestions":"505"},{"ruleId":"481","severity":1,"message":"506","line":45,"column":8,"nodeType":"483","endLine":45,"endColumn":10,"suggestions":"507"},{"ruleId":"492","severity":1,"message":"493","line":87,"column":39,"nodeType":"494","messageId":"495","endLine":87,"endColumn":41},{"ruleId":"508","severity":1,"message":"509","line":88,"column":50,"nodeType":"510","messageId":"511","endLine":88,"endColumn":52},{"ruleId":"512","severity":1,"message":"513","line":12,"column":25,"nodeType":"498","endLine":12,"endColumn":154},{"ruleId":"477","severity":1,"message":"502","line":5,"column":5,"nodeType":"470","messageId":"479","endLine":5,"endColumn":11},{"ruleId":"477","severity":1,"message":"514","line":7,"column":5,"nodeType":"470","messageId":"479","endLine":7,"endColumn":8},{"ruleId":"477","severity":1,"message":"515","line":8,"column":5,"nodeType":"470","messageId":"479","endLine":8,"endColumn":8},{"ruleId":"477","severity":1,"message":"516","line":19,"column":8,"nodeType":"470","messageId":"479","endLine":19,"endColumn":20},{"ruleId":"477","severity":1,"message":"517","line":98,"column":12,"nodeType":"470","messageId":"479","endLine":98,"endColumn":21},{"ruleId":"477","severity":1,"message":"518","line":134,"column":19,"nodeType":"470","messageId":"479","endLine":134,"endColumn":25},{"ruleId":"519","severity":1,"message":"520","line":143,"column":33,"nodeType":"521","messageId":"522","endLine":143,"endColumn":54,"fix":"523"},{"ruleId":"492","severity":1,"message":"493","line":171,"column":40,"nodeType":"494","messageId":"495","endLine":171,"endColumn":42},{"ruleId":"481","severity":1,"message":"524","line":180,"column":7,"nodeType":"483","endLine":180,"endColumn":9,"suggestions":"525"},{"ruleId":"492","severity":1,"message":"493","line":205,"column":39,"nodeType":"494","messageId":"495","endLine":205,"endColumn":41},{"ruleId":"492","severity":1,"message":"493","line":217,"column":31,"nodeType":"494","messageId":"495","endLine":217,"endColumn":33},{"ruleId":"492","severity":1,"message":"493","line":230,"column":23,"nodeType":"494","messageId":"495","endLine":230,"endColumn":25},{"ruleId":"519","severity":1,"message":"526","line":231,"column":33,"nodeType":"521","messageId":"522","endLine":231,"endColumn":48,"fix":"527"},{"ruleId":"492","severity":1,"message":"493","line":233,"column":29,"nodeType":"494","messageId":"495","endLine":233,"endColumn":31},{"ruleId":"519","severity":1,"message":"526","line":234,"column":37,"nodeType":"521","messageId":"522","endLine":234,"endColumn":49,"fix":"528"},{"ruleId":"519","severity":1,"message":"526","line":242,"column":29,"nodeType":"521","messageId":"522","endLine":242,"endColumn":48,"fix":"529"},{"ruleId":"519","severity":1,"message":"530","line":247,"column":29,"nodeType":"521","messageId":"522","endLine":247,"endColumn":54,"fix":"531"},{"ruleId":"508","severity":1,"message":"509","line":264,"column":44,"nodeType":"510","messageId":"511","endLine":264,"endColumn":46},{"ruleId":"492","severity":1,"message":"493","line":300,"column":39,"nodeType":"494","messageId":"495","endLine":300,"endColumn":41},{"ruleId":"508","severity":1,"message":"509","line":301,"column":50,"nodeType":"510","messageId":"511","endLine":301,"endColumn":52},{"ruleId":"492","severity":1,"message":"532","line":24,"column":26,"nodeType":"494","messageId":"495","endLine":24,"endColumn":28},{"ruleId":"477","severity":1,"message":"533","line":23,"column":7,"nodeType":"470","messageId":"479","endLine":23,"endColumn":14},{"ruleId":"477","severity":1,"message":"534","line":28,"column":12,"nodeType":"470","messageId":"479","endLine":28,"endColumn":19},{"ruleId":"481","severity":1,"message":"506","line":70,"column":8,"nodeType":"483","endLine":70,"endColumn":10,"suggestions":"535"},{"ruleId":"477","severity":1,"message":"536","line":153,"column":11,"nodeType":"470","messageId":"479","endLine":153,"endColumn":15},{"ruleId":"477","severity":1,"message":"537","line":1,"column":17,"nodeType":"470","messageId":"479","endLine":1,"endColumn":25},{"ruleId":"477","severity":1,"message":"538","line":1,"column":27,"nodeType":"470","messageId":"479","endLine":1,"endColumn":36},{"ruleId":"481","severity":1,"message":"539","line":58,"column":8,"nodeType":"483","endLine":58,"endColumn":10,"suggestions":"540"},{"ruleId":"508","severity":1,"message":"509","line":86,"column":28,"nodeType":"510","messageId":"511","endLine":86,"endColumn":30},{"ruleId":"477","severity":1,"message":"541","line":101,"column":17,"nodeType":"470","messageId":"479","endLine":101,"endColumn":21},{"ruleId":"481","severity":1,"message":"542","line":115,"column":8,"nodeType":"483","endLine":115,"endColumn":16,"suggestions":"543"},{"ruleId":"481","severity":1,"message":"544","line":119,"column":8,"nodeType":"483","endLine":119,"endColumn":19,"suggestions":"545"},{"ruleId":"481","severity":1,"message":"546","line":125,"column":8,"nodeType":"483","endLine":125,"endColumn":14,"suggestions":"547"},{"ruleId":"481","severity":1,"message":"548","line":131,"column":8,"nodeType":"483","endLine":131,"endColumn":19,"suggestions":"549"},{"ruleId":"477","severity":1,"message":"550","line":147,"column":11,"nodeType":"470","messageId":"479","endLine":147,"endColumn":18},{"ruleId":"477","severity":1,"message":"551","line":154,"column":11,"nodeType":"470","messageId":"479","endLine":154,"endColumn":21},{"ruleId":"508","severity":1,"message":"509","line":168,"column":23,"nodeType":"510","messageId":"511","endLine":168,"endColumn":25},{"ruleId":"508","severity":1,"message":"509","line":210,"column":26,"nodeType":"510","messageId":"511","endLine":210,"endColumn":28},{"ruleId":"508","severity":1,"message":"509","line":221,"column":24,"nodeType":"510","messageId":"511","endLine":221,"endColumn":26},{"ruleId":"508","severity":1,"message":"509","line":225,"column":24,"nodeType":"510","messageId":"511","endLine":225,"endColumn":26},{"ruleId":"508","severity":1,"message":"509","line":258,"column":23,"nodeType":"510","messageId":"511","endLine":258,"endColumn":25},{"ruleId":"508","severity":1,"message":"509","line":271,"column":23,"nodeType":"510","messageId":"511","endLine":271,"endColumn":25},{"ruleId":"477","severity":1,"message":"502","line":5,"column":5,"nodeType":"470","messageId":"479","endLine":5,"endColumn":11},{"ruleId":"481","severity":1,"message":"506","line":48,"column":8,"nodeType":"483","endLine":48,"endColumn":10,"suggestions":"552"},{"ruleId":"508","severity":1,"message":"509","line":52,"column":24,"nodeType":"510","messageId":"511","endLine":52,"endColumn":26},{"ruleId":"508","severity":1,"message":"509","line":76,"column":44,"nodeType":"510","messageId":"511","endLine":76,"endColumn":46},{"ruleId":"512","severity":1,"message":"513","line":170,"column":17,"nodeType":"498","endLine":170,"endColumn":146},"no-native-reassign",["553"],"no-negated-in-lhs",["554"],["553"],["554"],["553"],["554"],"no-undef","'$' is not defined.","Identifier","undef","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"555","text":"556"},"no-unused-vars","'setFormErrors' is assigned a value but never used.","unusedVar","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["557"],"React Hook useEffect contains a call to 'setColumns'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.columns, props.data] as a second argument to the useEffect Hook.",["558"],"'setMessage' is assigned a value but never used.","'setSecid' is assigned a value but never used.","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSecurity'. Either include it or remove the dependency array.",["559"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement",["553"],["554"],"'authenticationService' is defined but never used.","'Button' is defined but never used.","'authHeader' is defined but never used.","React Hook useEffect has a missing dependency: 'props.location.state'. Either include it or remove the dependency array. If 'setPortfolio' needs the current value of 'props.location.state', you can also switch to useReducer instead of useState and read 'props.location.state' in the reducer.",["560"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["561"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Row' is defined but never used.","'Col' is defined but never used.","'SelectSecids' is defined but never used.","'portfolio' is assigned a value but never used.","'result' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property ['portfolioId'] found.","Property","unnecessarilyComputedProperty",{"range":"562","text":"563"},"React Hook useEffect has missing dependencies: 'props.history', 'props.location.state', 'trade', and 'updateOperation'. Either include them or remove the dependency array. If 'setTrade' needs the current value of 'props.location.state', you can also switch to useReducer instead of useState and read 'props.location.state' in the reducer.",["564"],"Unnecessarily computed property ['secid'] found.",{"range":"565","text":"566"},{"range":"567","text":"566"},{"range":"568","text":"566"},"Unnecessarily computed property ['operationId'] found.",{"range":"569","text":"570"},"Expected '!==' and instead saw '!='.","'SPINNER' is assigned a value but never used.","'loading' is assigned a value but never used.",["571"],"'data' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'loadData' and 'props.history'. Either include them or remove the dependency array.",["572"],"'name' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'updateAvailable' and 'updateGoal'. Either include them or remove the dependency array.",["573"],"React Hook useEffect has a missing dependency: 'updateGoal'. Either include it or remove the dependency array.",["574"],"React Hook useEffect has missing dependencies: 'updateDif', 'updateRebalanceCategory', and 'updateRebalanceTotal'. Either include them or remove the dependency array.",["575"],"React Hook useEffect has missing dependencies: 'updateAvailable', 'updateRebalanceCategory', and 'updateRebalanceTotal'. Either include them or remove the dependency array.",["576"],"'getGoal' is assigned a value but never used.","'getGoalPrc' is assigned a value but never used.",["577"],"no-global-assign","no-unsafe-negation",[33,46],"",{"desc":"578","fix":"579"},{"desc":"580","fix":"581"},{"desc":"582","fix":"583"},{"desc":"584","fix":"585"},{"desc":"586","fix":"587"},[2929,2944],"'portfolioId'",{"desc":"588","fix":"589"},[5168,5177],"'secid'",[5280,5289],[5449,5458],[5580,5595],"'operationId'",{"desc":"586","fix":"590"},{"desc":"591","fix":"592"},{"desc":"593","fix":"594"},{"desc":"595","fix":"596"},{"desc":"597","fix":"598"},{"desc":"599","fix":"600"},{"desc":"586","fix":"601"},"Update the dependencies array to be: [getUser]",{"range":"602","text":"603"},"Add dependencies array: [props.columns, props.data]",{"range":"604","text":"605"},"Update the dependencies array to be: [getSecurity]",{"range":"606","text":"607"},"Update the dependencies array to be: [props.location.state]",{"range":"608","text":"609"},"Update the dependencies array to be: [props.history]",{"range":"610","text":"611"},"Update the dependencies array to be: [props.history, props.location.state, trade, updateOperation]",{"range":"612","text":"613"},{"range":"614","text":"611"},"Update the dependencies array to be: [loadData, props.history]",{"range":"615","text":"616"},"Update the dependencies array to be: [income, updateAvailable, updateGoal]",{"range":"617","text":"618"},"Update the dependencies array to be: [available, updateGoal]",{"range":"619","text":"620"},"Update the dependencies array to be: [goal, updateDif, updateRebalanceCategory, updateRebalanceTotal]",{"range":"621","text":"622"},"Update the dependencies array to be: [operation, updateAvailable, updateRebalanceCategory, updateRebalanceTotal]",{"range":"623","text":"624"},{"range":"625","text":"611"},[3233,3235],"[getUser]",[2136,2136],", [props.columns, props.data]",[2487,2489],"[getSecurity]",[771,773],"[props.location.state]",[1109,1111],"[props.history]",[3893,3895],"[props.history, props.location.state, trade, updateOperation]",[1815,1817],[1455,1457],"[loadData, props.history]",[3129,3137],"[income, updateAvailable, updateGoal]",[3192,3203],"[available, updateGoal]",[3324,3330],"[goal, updateDif, updateRebalanceCategory, updateRebalanceTotal]",[3457,3468],"[operation, updateAvailable, updateRebalanceCategory, updateRebalanceTotal]",[1172,1174]]